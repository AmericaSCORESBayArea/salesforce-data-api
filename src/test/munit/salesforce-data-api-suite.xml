<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="salesforce-data-api-suite.xml" />
	<global-property doc:name="Global Property" doc:id="b0c78ee5-eea5-4c2c-a827-4d94f2e878c6" name="env" value="munit" />
	<munit:test name="post:\coach\(coachId)\teamseasons\(teamSeasonId)\sessions\(sessionId)\attendances:application\json:salesforce-data-api-config-test2" doc:id="de7429c8-0ce3-4431-8100-705735b5b3aa" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Upsert" doc:id="6692e674-b0bb-4b36-9317-943551cdd37d" processor="salesforce:upsert">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="96226f7b-9c73-4b6c-80d2-bce874e4cfb2" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest2/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest2/mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest2/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest2/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="sessionId" value="#[output application/java --- readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest2/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="teamSeasonId" value="#[output application/java --- readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest2/mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="coachId" value="#[output application/java --- readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest2/mock_variable_5.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="6749f323-f714-44f8-b68b-db85477b7d81" >
				<munit:payload value="#[output application/json --- readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest2/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest2/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest2/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\coach\(coachId)\teamseasons\(teamSeasonId)\sessions\(sessionId)\attendances:application\json:salesforce-data-api-config" doc:id="a544a16c-f9aa-4e34-970b-f503439805a2" name="post:\coach\(coachId)\teamseasons\(teamSeasonId)\sessions\(sessionId)\attendances:application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="2341e246-99f4-49d2-b4df-a2c56f96c0fd" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest2::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Store URI parameters" doc:id="fe45d2f2-5d94-4aed-95c7-63922fe472e2" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="f711ee79-c3c7-4cdb-af46-28723e067b8f" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify entry-flow" doc:id="02c42133-0ea4-4083-8108-ce0db24f487a" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="319d3747-39e8-43d4-a9c2-9afd1935dd5e" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify exit flow" doc:id="5fa15c5f-97ab-483c-aaaf-8844c24bd6e4" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="32b947ab-3abc-4f72-b6a5-79c51e3e786f" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="58a819ed-eb66-4abb-bce2-94adfb778db3" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="02b48aab-bddb-4054-8872-ac1433da5ffd" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>



	<munit:test name="patch:\contacts\(id):application\json:salesforce-data-api-config-test" doc:id="ead69651-6a14-4631-aa89-032b34dc47a5" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Update" doc:id="51cd7fe9-983c-4a0b-8bbd-9f04816f57a9" processor="salesforce:update">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="22d1f2d0-03bc-4987-82e8-200abcd9b67a" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://patchcontactsidapplicationjsonsalesforcedataapiconfigtest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://patchcontactsidapplicationjsonsalesforcedataapiconfigtest/mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://patchcontactsidapplicationjsonsalesforcedataapiconfigtest/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://patchcontactsidapplicationjsonsalesforcedataapiconfigtest/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="id" value="#[output application/java --- readUrl('classpath://patchcontactsidapplicationjsonsalesforcedataapiconfigtest/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="027bac86-96fd-4c83-927b-a7782b4e91d5" >
				<munit:payload value="#[output application/json --- readUrl('classpath://patchcontactsidapplicationjsonsalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://patchcontactsidapplicationjsonsalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://patchcontactsidapplicationjsonsalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to patch:\contacts\(id):application\json:salesforce-data-api-config" doc:id="b3daf84a-2b4d-486f-9b35-8946b7921167" name="patch:\contacts\(contactId):application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="4175422c-6e1e-4ae2-855c-54ed161ec458" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import patchcontactsidapplicationjsonsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\teams\(teamId):salesforce-data-api-config-test" doc:id="138510c8-2cac-4a9c-82e1-e17cf4db9cbb">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Query" doc:id="52ee6ce4-1162-4eb9-8441-79625ed95886" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="1a7e6fb4-ede4-42d0-8c21-f555a500e309" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getteamsteamIdsalesforcedataapiconfigtest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getteamsteamIdsalesforcedataapiconfigtest/mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://getteamsteamIdsalesforcedataapiconfigtest/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="teamId" value="#[output application/java --- readUrl('classpath://getteamsteamIdsalesforcedataapiconfigtest/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://getteamsteamIdsalesforcedataapiconfigtest/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="f8715e81-a136-49b4-a838-d28a564cc2ce" >
				<munit:payload value="#[readUrl('classpath://getteamsteamIdsalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getteamsteamIdsalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getteamsteamIdsalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\teams\(teamId):salesforce-data-api-config" doc:id="d449a5e2-871d-49a9-944f-7e4177ca8122" name="get:\teams\(teamId):salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="cbdb6c40-cde6-4295-a9b8-0759314d6935" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getteamsteamIdsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Store URI parameters" doc:id="4da7fe56-8f25-4a6f-8067-3164aa49fc23" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="e1eb9f83-5201-4295-895f-aa48633286c7" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="69b36a5d-cfb5-4ac0-8499-f29ec57e889c" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="6c6dd450-2076-4474-a8ad-bb9eac2a4c5d" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify exit flow" doc:id="ae721efc-6a1d-471f-b00d-05530670b5b5" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="212021ec-4d7a-48da-8a2d-30446d4723cd" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="patch:\sessions\(sessionId):application\json:salesforce-data-api-config-test" doc:id="626e7e87-5a44-44a3-b5f2-33ca15f274b4" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Update" doc:id="673f183a-1ad2-4d60-aef9-0626fffd5684" processor="salesforce:update">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="8c8e7dd2-d781-47cf-86ea-22b015e314d3" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://patchsessionssessionIdapplicationjsonsalesforcedataapiconfigtest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://patchsessionssessionIdapplicationjsonsalesforcedataapiconfigtest/mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://patchsessionssessionIdapplicationjsonsalesforcedataapiconfigtest/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://patchsessionssessionIdapplicationjsonsalesforcedataapiconfigtest/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="sessionId" value="#[output application/java --- readUrl('classpath://patchsessionssessionIdapplicationjsonsalesforcedataapiconfigtest/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="6227a8ba-dd83-487f-aa6e-4c0dabcb5fa7" >
				<munit:payload value="#[output application/json --- readUrl('classpath://patchsessionssessionIdapplicationjsonsalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://patchsessionssessionIdapplicationjsonsalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://patchsessionssessionIdapplicationjsonsalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to patch:\sessions\(sessionId):application\json:salesforce-data-api-config" doc:id="03cf66d8-6df5-41c1-8aa9-5391ea362496" name="patch:\sessions\(sessionId):application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="9cf5db1e-0998-47ac-bee3-9c73bcc1cd38" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import patchsessionssessionIdapplicationjsonsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify exit flow" doc:id="ac86391f-d575-4f1a-8260-5795fb7059ce" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="eb6b3c8c-f332-4022-9148-f3f476454b33" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Log Created Response" doc:id="df8bb5f8-9397-4aff-bf16-a234d6e62adc" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="a674f8a2-3d62-4b8d-8f14-18864cb484a6" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Create Response" doc:id="958e6e53-8f5a-4a7d-9d18-a0ce323b4eec" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="e4941d73-e82e-40a0-b233-d8ab1b1563c2" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="post:\sessions:application\json:salesforce-data-api-config-test-error" doc:id="53c46f2c-1db1-45a9-96b0-53fd01c2c4be" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Create" doc:id="248bd1a6-71b7-4780-8fdd-7c622ad45900" processor="salesforce:create">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="b3d05b31-6ff5-4009-8e65-d5e947bf452c" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://postsessionsapplicationjsonsalesforcedataapiconfigtesterror/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postsessionsapplicationjsonsalesforcedataapiconfigtesterror/mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://postsessionsapplicationjsonsalesforcedataapiconfigtesterror/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://postsessionsapplicationjsonsalesforcedataapiconfigtesterror/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="e9f4b3f8-e0bd-4a9b-b326-1f3580e7d550" >
				<munit:payload value="#[output application/json --- readUrl('classpath://postsessionsapplicationjsonsalesforcedataapiconfigtesterror/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://postsessionsapplicationjsonsalesforcedataapiconfigtesterror/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postsessionsapplicationjsonsalesforcedataapiconfigtesterror/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\sessions:application\json:salesforce-data-api-config" doc:id="0135e696-c523-427c-b297-232609027fa8" name="post:\sessions:application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="79607db3-a646-4ea3-82fb-92405a31497e" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postsessionsapplicationjsonsalesforcedataapiconfigtesterror::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify exit flow" doc:id="7cba334c-9341-456c-8d90-a71a9fed4d14" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="ffed222e-011b-42f6-a9a1-f3cb065c6e44" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Log Created Response" doc:id="bb2bedc6-da48-448c-9308-0120363389cd" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="640a58eb-a8ab-40f9-bcc2-a9cadcf86bb5" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Create Error Response" doc:id="5ec4aa4d-87fd-4c18-84f8-0765655ab36c" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="bab61664-0548-4e6c-aeb9-c2801cc89ff2" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="post:\sessions:application\json:salesforce-data-api-config-test" doc:id="24e458b6-7d66-4387-98e4-31161f97ba7c" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Create" doc:id="9c0e38a9-7828-4188-b65e-7a6420f77d2a" processor="salesforce:create">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="b3d05b31-6ff5-4009-8e65-d5e947bf452c" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://postsessionsapplicationjsonsalesforcedataapiconfigtest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postsessionsapplicationjsonsalesforcedataapiconfigtest/mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://postsessionsapplicationjsonsalesforcedataapiconfigtest/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://postsessionsapplicationjsonsalesforcedataapiconfigtest/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="080a7faa-3756-492c-b08b-ec6730d593eb" >
				<munit:payload value="#[output application/json --- readUrl('classpath://postsessionsapplicationjsonsalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://postsessionsapplicationjsonsalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postsessionsapplicationjsonsalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\sessions:application\json:salesforce-data-api-config" doc:id="3cd5d4c4-5dab-4b08-bfb2-a0944e2a5582" name="post:\sessions:application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="c1a6ca16-29c0-442b-8a83-2cacea166453" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postsessionsapplicationjsonsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Create Response" doc:id="35cf5dd5-6305-42e8-ade5-814f4ad6f07d" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="6779c4d0-a8dc-4e33-befa-a4b77df09562" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify exit flow" doc:id="27b87273-60d7-452d-b626-a41cca0a02ce" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="ffed222e-011b-42f6-a9a1-f3cb065c6e44" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Log Created Response" doc:id="38a0aaea-a400-42d6-91dc-826dd9efd9db" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="640a58eb-a8ab-40f9-bcc2-a9cadcf86bb5" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\enrollments\(enrollmentId):salesforce-data-api-config-test" doc:id="4279ab87-22bd-44bc-b02c-f0aed57ca825" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Select Query with EnrollmentId" doc:id="9eb02d25-a022-4cf2-aabb-96c0732c0be4" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="f260dbdf-78c5-466a-aa34-d2d71296302a" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getenrollmentsenrollmentIdsalesforcedataapiconfigtest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="enrollmentId" value="#[output application/java --- readUrl('classpath://getenrollmentsenrollmentIdsalesforcedataapiconfigtest/mock_variable_.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getenrollmentsenrollmentIdsalesforcedataapiconfigtest/mock_variable_1.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://getenrollmentsenrollmentIdsalesforcedataapiconfigtest/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://getenrollmentsenrollmentIdsalesforcedataapiconfigtest/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="f70ca650-b964-42f6-9372-dba8afb1649e" >
				<munit:attributes value="#[readUrl('classpath://getenrollmentsenrollmentIdsalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getenrollmentsenrollmentIdsalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\enrollments\(enrollmentId):salesforce-data-api-config" doc:id="c0426f49-8893-4013-ac44-70e2f6ba0202" name="get:\enrollments\(enrollmentId):salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="004f7051-4642-417c-8291-42dde5d62a1b" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getenrollmentsenrollmentIdsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Log Created Response" doc:id="8e2f3226-f5bf-4db4-8d32-e2b77e8a53ef" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="9c4812bf-ca0b-4363-9dd9-3cb37d96529c" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Create Response" doc:id="03ff1fef-d30a-41a7-aebe-88d82fb8dfd9" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="5194d465-d73d-4f19-a5c9-252f50062a57" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify exit flow" doc:id="0c6af513-b394-443d-b1d9-ba86203ee59c" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="58405e41-0baf-4121-ac6b-f0b16bff945b" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="patch:\enrollments\(enrollmentId):application\json:salesforce-data-api-config-test" doc:id="2c3decdc-90e5-47f7-8534-e89e3a48ebfc" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Update" doc:id="e08de304-ce13-41a1-98eb-4f248938d932" processor="salesforce:update">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="db1b614e-3b4c-4db6-8195-a6e9617257e4" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="enrollmentId" value="#[output application/java --- readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest/mock_variable_.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest/mock_variable_1.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="f4250732-66aa-4292-9d2e-4a5f74d5a044" >
				<munit:payload value="#[output application/json --- readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to patch:\enrollments\(enrollmentId):application\json:salesforce-data-api-config" doc:id="5659a9bb-9196-4f84-94da-ea9a23acd93e" name="patch:\enrollments\(enrollmentId):application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="2808dadd-63e8-4a0b-8c19-7d7c5f12f091" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Create Error Response" doc:id="f24dcfc1-9b3f-44eb-81ec-bd7d359b77b8" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="36abc3b2-f428-48ee-b518-a1353e6f235a" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Log Created Response" doc:id="5d5c44af-699c-493b-bbf7-4f020bee2650" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="50386ceb-cbfa-4696-9f94-075d5988da4e" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify exit flow" doc:id="5193cf35-d951-4a9f-b7d4-6802081c3385" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="b8ba3115-6241-4702-a85d-ec76550633c4" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="patch:\enrollments\(enrollmentId):application\json:salesforce-data-api-config-test1" doc:id="1fd6ce11-8f17-416e-8776-966062327457" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Update" doc:id="ebc1cfb3-26b5-449d-ad34-9fc82394f833" processor="salesforce:update">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="db1b614e-3b4c-4db6-8195-a6e9617257e4" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest1/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="enrollmentId" value="#[output application/java --- readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest1/mock_variable_.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest1/mock_variable_1.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest1/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest1/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="91c400d1-e8cc-4c08-9dfc-43b136cc5cfe" >
				<munit:payload value="#[output application/json --- readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest1/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest1/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest1/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to patch:\enrollments\(enrollmentId):application\json:salesforce-data-api-config" doc:id="124b16ef-35b4-4584-8b54-7210094d8598" name="patch:\enrollments\(enrollmentId):application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="ce288700-f227-4e35-966a-a9f7a854ae0c" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest1::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Create Response" doc:id="d9ef0738-3582-4316-9d6b-ac34455d6328" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="5cd8fa6a-e3d1-44de-9625-aff048e5fc8f" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Log Created Response" doc:id="41bed9e6-8902-419c-9b0e-e0e1ff28d3c4" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="50386ceb-cbfa-4696-9f94-075d5988da4e" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify exit flow" doc:id="975e1209-2a24-42ee-861b-d5c6139f122c" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="b8ba3115-6241-4702-a85d-ec76550633c4" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="post:\enrollments:application\json:salesforce-data-api-config-test" doc:id="664b904a-d8f5-4b9f-9f0a-08a7ccbc350e" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Create" doc:id="37f61719-b596-4465-8a48-34676f089878" processor="salesforce:create">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c3404357-77e8-49ee-80c6-499595b2b643" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://postenrollmentsapplicationjsonsalesforcedataapiconfigtest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postenrollmentsapplicationjsonsalesforcedataapiconfigtest/mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://postenrollmentsapplicationjsonsalesforcedataapiconfigtest/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://postenrollmentsapplicationjsonsalesforcedataapiconfigtest/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="6f564665-6e6e-49ab-83cc-d1f6c0b955e4" >
				<munit:payload value="#[output application/json --- readUrl('classpath://postenrollmentsapplicationjsonsalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://postenrollmentsapplicationjsonsalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postenrollmentsapplicationjsonsalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\enrollments:application\json:salesforce-data-api-config" doc:id="23b14b73-b44b-4cc6-a94f-137a8d1c26b1" name="post:\enrollments:application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="95fcbdea-da7c-49df-8abe-bbb43210c6f4" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postenrollmentsapplicationjsonsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify exit flow" doc:id="678e77e3-1765-49f0-a5ca-5ca500578f2c" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="def4e728-8bf5-45ff-85ac-c213895d9de4" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Log Created Response" doc:id="18f68a22-0f14-4442-b474-c53e976022ad" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c5b7c4fb-80e0-4c5c-8188-96caf7a2754b" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Create Response" doc:id="2337d0c3-a0da-41d3-90c4-e7e0fb0eb15a" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="291c1936-dfea-4dd5-aaba-c30a5a5b4311" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="patch:\teams\(teamId):application\json:salesforce-data-api-config-test" doc:id="b5f69b6e-6893-4995-a869-dd651a05c256" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="b03b0fa2-0f8b-416f-a640-701c01b194b1" >
				<munit:payload value="#[output application/json --- readUrl('classpath://patchteamsteamIdapplicationjsonsalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://patchteamsteamIdapplicationjsonsalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://patchteamsteamIdapplicationjsonsalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to patch:\teams\(teamId):application\json:salesforce-data-api-config" doc:id="bfa1548d-60bb-4701-8268-8db8d41287a7" name="patch:\teams\(teamId):application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="7cf38fe2-ca48-409f-8350-889987c012d4" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import patchteamsteamIdapplicationjsonsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\teams:salesforce-data-api-config-test" doc:id="00d39136-ba67-4832-a14c-cd62e5b6dafb" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="9936e811-b04a-4b1f-9185-511359c6b5cb" >
				<munit:payload value="#[readUrl('classpath://getteamssalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getteamssalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getteamssalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\teams:salesforce-data-api-config" doc:id="e81d1264-2d45-44b9-a1c2-334b90b4454e" name="get:\teams:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="dc2fe314-cb8a-48c1-8f1e-6e080970779d" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getteamssalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\teamSeasons\(teamSeasonId):salesforce-data-api-config-test" doc:id="1fbd8b50-79f0-40df-9731-fb034aff5a24" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="5bc59d80-b817-4b61-9270-595a7620b465" >
				<munit:payload value="#[readUrl('classpath://getteamSeasonsteamSeasonIdsalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getteamSeasonsteamSeasonIdsalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getteamSeasonsteamSeasonIdsalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\teamSeasons\(teamSeasonId):salesforce-data-api-config" doc:id="c19c7ab1-60cc-45aa-87b5-d4d908d05e0f" name="get:\teamSeasons\(teamSeasonId):salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="bbd4c849-fb13-4d57-b831-44740dc6473e" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getteamSeasonsteamSeasonIdsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="post:\teamSeasons:application\json:salesforce-data-api-config-test" doc:id="12e6eb69-7225-409f-aa56-97cc409096d3" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="328e8482-8a63-4aa5-8d26-b5a5f56517af" >
				<munit:payload value="#[output application/json --- readUrl('classpath://postteamSeasonsapplicationjsonsalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://postteamSeasonsapplicationjsonsalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postteamSeasonsapplicationjsonsalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\teamSeasons:application\json:salesforce-data-api-config" doc:id="bf45c341-db06-4c09-a53a-14b8d9f12896" name="post:\teamSeasons:application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="730c931c-f971-4d18-a392-0ab737ed5836" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postteamSeasonsapplicationjsonsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="post:\teams:application\json:salesforce-data-api-config-test" doc:id="85e8570f-9f6d-4a6b-a83e-eb5e6c94ba09" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="69e00882-650f-4702-9792-8ed4dfd1a8f9" >
				<munit:payload value="#[output application/json --- readUrl('classpath://postteamsapplicationjsonsalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://postteamsapplicationjsonsalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postteamsapplicationjsonsalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\teams:application\json:salesforce-data-api-config" doc:id="ef8fab7e-60dd-48dc-b688-4ff401b5d38a" name="post:\teams:application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="198150c9-9441-4b13-92b1-b9e293e8c5dd" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postteamsapplicationjsonsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="post:\attendances:application\json:salesforce-data-api-config-test" doc:id="2d910a7c-8b22-4473-82de-781da79492d9" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Upsert" doc:id="bebb2e98-2455-4116-a2de-b0e3445cc244" processor="salesforce:upsert">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="be2ff311-106e-4093-9e29-2b1bb3850161" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://postattendancesapplicationjsonsalesforcedataapiconfigtest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postattendancesapplicationjsonsalesforcedataapiconfigtest/mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://postattendancesapplicationjsonsalesforcedataapiconfigtest/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://postattendancesapplicationjsonsalesforcedataapiconfigtest/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="1f19f81b-2ee4-4a44-b0f6-abf83d2bfe4e" >
				<munit:payload value="#[output application/json --- readUrl('classpath://postattendancesapplicationjsonsalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://postattendancesapplicationjsonsalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postattendancesapplicationjsonsalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\attendances:application\json:salesforce-data-api-config" doc:id="0a9a935c-39e4-4e81-b726-47b10dc78329" name="post:\attendances:application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="95ce6259-86ee-4ab1-9223-589bb7fbd7b8" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postattendancesapplicationjsonsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Create response" doc:id="173f4c48-c87b-42f1-a2cf-0d91831c7642" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="238ab716-c648-4986-a081-336f96add8ba" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify exit flow" doc:id="ad089e7c-4a56-46e9-8349-d700222349bc" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="042e3e1d-e8f7-46e4-a8e3-ea7563f61b68" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\coach\(coachId)\teamseasonsNotOwnedByCoach:salesforce-data-api-config-test" doc:id="3e4604f7-6b5d-47c4-a9c9-62adbe59a205" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Query" doc:id="5265ef33-0239-4a0c-8ce9-54779aaa8bc7" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="cf0e3b35-eb45-4493-b40a-ab9cd3f99273" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsNotOwnedByCoachsalesforcedataapiconfigtest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getcoachcoachIdteamseasonsNotOwnedByCoachsalesforcedataapiconfigtest\mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsNotOwnedByCoachsalesforcedataapiconfigtest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="season" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsNotOwnedByCoachsalesforcedataapiconfigtest\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsNotOwnedByCoachsalesforcedataapiconfigtest\mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="region" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsNotOwnedByCoachsalesforcedataapiconfigtest\mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="teamSeasonId" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsNotOwnedByCoachsalesforcedataapiconfigtest\mock_variable_5.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="coachId" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsNotOwnedByCoachsalesforcedataapiconfigtest\mock_variable_6.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="f8f63c0b-c586-4655-83fd-ab1a76294405" >
				<munit:payload value="#[readUrl('classpath://getcoachcoachIdteamseasonsNotOwnedByCoachsalesforcedataapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getcoachcoachIdteamseasonsNotOwnedByCoachsalesforcedataapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getcoachcoachIdteamseasonsNotOwnedByCoachsalesforcedataapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\coach\(coachId)\teamseasonsNotOwnedByCoach:salesforce-data-api-config" doc:id="2d643e47-1ab5-4e31-8100-25be2bddd27c" name="get:\coach\(coachId)\teamseasonsNotOwnedByCoach:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="fde58b1f-959e-4263-99eb-d095e2ad12be" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getcoachcoachIdteamseasonsNotOwnedByCoachsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Log Created Response" doc:id="859d2c71-3499-41ae-ad5d-571c685de737" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="d8ecc282-d9e5-4701-9daa-79d507b4401e" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Create Response" doc:id="305cc1d5-4144-471e-9170-342e561f6635" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="9fa45ae2-07a4-4857-af7c-7487c2fe453c" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify exit flow" doc:id="64c7ccfa-1945-4239-9e47-95bcbf96d6c0" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="90679941-f7e0-4b12-a9fe-f461fb6ca5dc" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="patch:\teamSeasons\(teamSeasonId):application\json:salesforce-data-api-config-test" doc:id="c4b85842-3372-4b66-959d-4c1e6b64bf77" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Update" doc:id="7b4e8ebf-3c34-46ce-9f09-e0145af1d360" processor="salesforce:update">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="d17f7124-2383-4f56-8891-5b990940aff1" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://patchteamSeasonsteamSeasonIdapplicationjsonsalesforcedataapiconfigtest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://patchteamSeasonsteamSeasonIdapplicationjsonsalesforcedataapiconfigtest\mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://patchteamSeasonsteamSeasonIdapplicationjsonsalesforcedataapiconfigtest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://patchteamSeasonsteamSeasonIdapplicationjsonsalesforcedataapiconfigtest\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="teamSeasonId" value="#[output application/java --- readUrl('classpath://patchteamSeasonsteamSeasonIdapplicationjsonsalesforcedataapiconfigtest\mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="821c6237-b8d8-4afb-a718-47d5147aa67a" >
				<munit:payload value="#[output application/json --- readUrl('classpath://patchteamSeasonsteamSeasonIdapplicationjsonsalesforcedataapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://patchteamSeasonsteamSeasonIdapplicationjsonsalesforcedataapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://patchteamSeasonsteamSeasonIdapplicationjsonsalesforcedataapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to patch:\teamSeasons\(teamSeasonId):application\json:salesforce-data-api-config" doc:id="fad252bf-50c7-48a4-9089-e9cd36ed9df1" name="patch:\teamSeasons\(teamSeasonId):application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="a8e5d933-0351-42b6-8cdd-726e3c4274c5" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import patchteamSeasonsteamSeasonIdapplicationjsonsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Log entry-flow" doc:id="c1e7a118-fef4-4caa-b842-e4e86a5951ea" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="5e84b14e-5e7d-47b7-8fdf-7cb1afc27820" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Store URI parameters" doc:id="da82afb5-69b3-4a94-a0ea-da72d8bf4a9f" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="7d1ddb06-9dee-4bc0-9f6e-5ec2dc18b61b" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Create Request" doc:id="f42cfc23-d3a3-499c-8aa6-eb9f728a61c1" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="b113fc49-7606-4715-9011-4c44e7ab7932" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Log Created Response" doc:id="fb18336c-5518-4168-b360-2da312752750" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="7929814c-bb94-4872-a86f-211a4874b58a" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\teamSeasons:salesforce-data-api-config-test1" doc:id="ed661441-e8ea-4510-add3-cc6b5e6e0e94" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Query" doc:id="79a2ba89-93bd-492e-8956-6d41bcada251" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="09cc2d2c-6b43-49fe-96e1-534e348b7af8" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getteamSeasonssalesforcedataapiconfigtest1\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getteamSeasonssalesforcedataapiconfigtest1\mock_variable_.dwl')]" />
						<munit-tools:variable key="date" value="#[output application/java --- readUrl('classpath://getteamSeasonssalesforcedataapiconfigtest1\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://getteamSeasonssalesforcedataapiconfigtest1\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://getteamSeasonssalesforcedataapiconfigtest1\mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="ea825a44-1d9d-48f9-8af4-2e765d1bce7e" >
				<munit:payload value="#[readUrl('classpath://getteamSeasonssalesforcedataapiconfigtest1\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getteamSeasonssalesforcedataapiconfigtest1\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getteamSeasonssalesforcedataapiconfigtest1\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\teamSeasons:salesforce-data-api-config" doc:id="cb1ec820-d81e-497d-bdaa-c7f302ae3bfa" name="get:\teamSeasons:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="1711ae5f-617f-491d-a64c-a15e1afe59bf" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getteamSeasonssalesforcedataapiconfigtest1::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\coach\(coachId)\regions:salesforce-data-api-config-test" doc:id="0729e8ae-7a8b-4276-a578-e684a63d5e0f" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Query" doc:id="64e20dd5-1443-4ae2-a975-b7327b128368" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="1c469572-0a13-4ec4-af11-1a180dad1f29" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getcoachcoachIdregionssalesforcedataapiconfigtest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getcoachcoachIdregionssalesforcedataapiconfigtest\mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://getcoachcoachIdregionssalesforcedataapiconfigtest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://getcoachcoachIdregionssalesforcedataapiconfigtest\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="coachId" value="#[output application/java --- readUrl('classpath://getcoachcoachIdregionssalesforcedataapiconfigtest\mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="a2f06c45-5b47-4aa2-ab17-fc975f826122" >
				<munit:payload value="#[readUrl('classpath://getcoachcoachIdregionssalesforcedataapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getcoachcoachIdregionssalesforcedataapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getcoachcoachIdregionssalesforcedataapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\coach\(coachId)\regions:salesforce-data-api-config" doc:id="11d160e8-1c79-495b-b115-d367959f3fc6" name="get:\coach\(coachId)\regions:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="f35334ec-ca1c-4bc8-94f3-40700676e342" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getcoachcoachIdregionssalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify exit flow" doc:id="63afb511-6f15-4930-b7ba-a9de5e0db65f" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c51dfc90-a5c0-4537-9846-77b49544764e" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Eliminate duplicates" doc:id="07071298-e1e7-401c-b843-4fb79b1112dc" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="47da582b-3623-4cde-acb9-4f74f7ec4d73" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Create Response" doc:id="d4edf805-a3e1-49dc-95f7-dccab3cf2f4a" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c6f46063-e866-4726-b0ac-ea760e0e6113" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Store URI parameters" doc:id="96f304f5-4cdd-493a-afc0-9d32aa202ecc" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="732ca3e0-9f8e-4608-86c0-e6fe6b8d4538" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify entry-flow" doc:id="088f68d9-6b9e-4655-831e-48508eb1e55b" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="ff8d3790-5ce7-468b-9d81-d1aa1dc4ba07" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\coach\(coachId)\teamseasons\(teamSeasonId)\sessions\(sessionId)\attendances:salesforce-data-api-config-test" doc:id="91802bbc-1c07-4df4-ac65-19669c460635" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Query" doc:id="8d5c474b-ca7b-4b51-a741-c41896353fc8" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="2c95dcd3-8d07-446c-883b-98f1ae79ed9c" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancessalesforcedataapiconfigtest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancessalesforcedataapiconfigtest\mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancessalesforcedataapiconfigtest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancessalesforcedataapiconfigtest\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="sessionId" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancessalesforcedataapiconfigtest\mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="teamSeasonId" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancessalesforcedataapiconfigtest\mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="coachId" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancessalesforcedataapiconfigtest\mock_variable_5.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="b148b430-11af-45a4-bb7b-d6b4f57112cd" >
				<munit:payload value="#[readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancessalesforcedataapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancessalesforcedataapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancessalesforcedataapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\coach\(coachId)\teamseasons\(teamSeasonId)\sessions\(sessionId)\attendances:salesforce-data-api-config" doc:id="3d00c625-6cfc-43f8-8059-e5127f31ce85" name="get:\coach\(coachId)\teamseasons\(teamSeasonId)\sessions\(sessionId)\attendances:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="cb17a651-7c52-461f-ab1e-f33b8f08dbef" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancessalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Log entry-flow" doc:id="44814639-1a26-44fa-92c0-2656ff738296" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="3ea68664-17b8-4854-8e58-7f6d03285b44" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="3ea68664-17b8-4854-8e58-7f6d03285b44" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Store URI parameters" doc:id="09550de1-16ea-44e8-aaa2-e5913bf172d0" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="86784c2c-83e8-4a5e-ae64-c5093cbacdbe" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="b1503b33-1d6f-4006-8dbd-4010613059a1" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="cc0b30b2-4bb2-4b3c-bfa8-72626dc8dc02" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="patch:\coach\(coachId)\teamseasons\(teamSeasonId)\sessions\(sessionId)\attendances:application\json:salesforce-data-api-config-test" doc:id="6fa2bcd8-8eae-42d9-b0af-93cb6a8eb15f" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Update" doc:id="dd249b39-083b-4d5c-8986-8d2edd89575b" processor="salesforce:update">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="4f4cb0a3-354a-4613-b2eb-8fc7789b795f" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://patchcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://patchcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest\mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://patchcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://patchcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="sessionId" value="#[output application/java --- readUrl('classpath://patchcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest\mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="teamSeasonId" value="#[output application/java --- readUrl('classpath://patchcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest\mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="coachId" value="#[output application/java --- readUrl('classpath://patchcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest\mock_variable_5.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="30c3a3c7-4a13-4155-ad6f-2710bde4819a" >
				<munit:payload value="#[output application/json --- readUrl('classpath://patchcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://patchcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://patchcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to patch:\coach\(coachId)\teamseasons\(teamSeasonId)\sessions\(sessionId)\attendances:application\json:salesforce-data-api-config" doc:id="42896c66-c7bf-4ef1-ad6c-da1cce56261d" name="patch:\coach\(coachId)\teamseasons\(teamSeasonId)\sessions\(sessionId)\attendances:application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="bfcedeeb-93b4-42eb-ae8e-23b556e7db2b" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import patchcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Log entry-flow" doc:id="18c4b338-6fae-4667-b874-ffc35eaa4830" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="70cadc02-23f3-4935-ac5a-253f60edd43f" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Store URI parameters" doc:id="95283cfe-a2bd-4cbb-8307-77dad717d28d" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="cc642196-6c49-49cf-acb8-7fd15a7e0f5c" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Log Created Response" doc:id="62d18ddd-bdda-4fd3-9b4f-8cdd181558b7" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="6277debb-2aa4-4703-97d1-66d20cd0d8e0" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\contacts:salesforce-data-api-config-test1" doc:id="3b5680c0-9753-417d-981e-43caec6411e5" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Select Query with Birthdate" doc:id="b5b9e3e2-b4ef-4a8e-a9cb-72530ad69b6c" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="2d2bd613-7cc8-48df-b3e3-e1c628982996" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getcontactssalesforcedataapiconfigtest1/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="firstName" value="#[output application/java --- readUrl('classpath://getcontactssalesforcedataapiconfigtest1/mock_variable_.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="lastName" value="#[output application/java --- readUrl('classpath://getcontactssalesforcedataapiconfigtest1/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="externalStudentId" value="#[output application/java --- readUrl('classpath://getcontactssalesforcedataapiconfigtest1/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getcontactssalesforcedataapiconfigtest1/mock_variable_3.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://getcontactssalesforcedataapiconfigtest1/mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://getcontactssalesforcedataapiconfigtest1/mock_variable_5.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="externalStudentIdSource" value="#[output application/java --- readUrl('classpath://getcontactssalesforcedataapiconfigtest1/mock_variable_6.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="birthDate" value="#[output application/java --- readUrl('classpath://getcontactssalesforcedataapiconfigtest1/mock_variable_7.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="ba1e9e28-8fbc-4a52-9f26-9e297f58503b" >
				<munit:payload value="#[readUrl('classpath://getcontactssalesforcedataapiconfigtest1/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getcontactssalesforcedataapiconfigtest1/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getcontactssalesforcedataapiconfigtest1/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\contacts:salesforce-data-api-config" doc:id="fbb95bf4-4211-4c65-a9c9-7e878fae8b2a" name="get:\contacts:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="5d31a6d8-66ea-4683-87c4-e3a9f0c7022c" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getcontactssalesforcedataapiconfigtest1::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Create Response" doc:id="5d1f673d-d0f7-4ccc-852a-53da4da22a04" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="143eb63d-2152-42b7-9da0-2c0ad80b73f0" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\contacts:salesforce-data-api-config-test-without-birthdate" doc:id="53faac0d-017b-4e93-9adf-50eee5c847af" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Select Query without Birthdate" doc:id="e0d4112f-79c9-4ab2-abd0-ae260b2cb849" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="ec730d90-d661-40ce-b9c0-d05dd4fc28a0" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getcontactssalesforcedataapiconfigtestwithoutbirthdate/mock_payload1.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="firstName" value="#[output application/java --- readUrl('classpath://getcontactssalesforcedataapiconfigtestwithoutbirthdate/mock_variable_7.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="lastName" value="#[output application/java --- readUrl('classpath://getcontactssalesforcedataapiconfigtestwithoutbirthdate/mock_variable_8.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="externalStudentId" value="#[output application/java --- readUrl('classpath://getcontactssalesforcedataapiconfigtestwithoutbirthdate/mock_variable_9.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getcontactssalesforcedataapiconfigtestwithoutbirthdate/mock_variable_10.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://getcontactssalesforcedataapiconfigtestwithoutbirthdate/mock_variable_11.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://getcontactssalesforcedataapiconfigtestwithoutbirthdate/mock_variable_12.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="externalStudentIdSource" value="#[output application/java --- readUrl('classpath://getcontactssalesforcedataapiconfigtestwithoutbirthdate/mock_variable_13.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="birthDate" value="#[output application/java --- readUrl('classpath://getcontactssalesforcedataapiconfigtestwithoutbirthdate/mock_variable_14.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="bf7dd752-9fae-4346-9cc8-22fd34594901" >
				<munit:payload value="#[readUrl('classpath://getcontactssalesforcedataapiconfigtestwithoutbirthdate/set-event_payload1.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getcontactssalesforcedataapiconfigtestwithoutbirthdate/set-event_attributes1.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getcontactssalesforcedataapiconfigtestwithoutbirthdate/set-event_variable_1.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\contacts:salesforce-data-api-config" doc:id="135c8b00-0e3d-4b32-a897-a23d76651ca5" name="get:\contacts:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="8e91c8de-e569-4d0d-af4a-8f0edef51a02" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getcontactssalesforcedataapiconfigtestwithoutbirthdate::assert_expression_payload1
---
assert_expression_payload1::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Create Response" doc:id="ca70aa9f-e862-4785-afd4-a82c012a5b4a" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="143eb63d-2152-42b7-9da0-2c0ad80b73f0" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\contacts\search:salesforce-data-api-config-test" doc:id="5bd58e21-620e-4da7-a0bd-2fdf2ccf39b0" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Search" doc:id="43f74a49-9e71-47ef-be24-64b81ca6f7e6" processor="salesforce:search">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="f195a55e-9140-44b5-b60e-1809649ef0a3" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java  --- readUrl('classpath://getcontactssearchsalesforcedataapiconfigtest\mock_payload1.dwl')]" mediaType="application/java " encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getcontactssearchsalesforcedataapiconfigtest\mock_variable_4.dwl')]" />
						<munit-tools:variable key="searchString" value="#[output application/java --- readUrl('classpath://getcontactssearchsalesforcedataapiconfigtest\mock_variable_5.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://getcontactssearchsalesforcedataapiconfigtest\mock_variable_6.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://getcontactssearchsalesforcedataapiconfigtest\mock_variable_7.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="9b9cba84-2423-4a4d-a554-18b7a29224a0" >
				<munit:payload value="#[readUrl('classpath://getcontactssearchsalesforcedataapiconfigtest\set-event_payload1.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getcontactssearchsalesforcedataapiconfigtest\set-event_attributes1.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getcontactssearchsalesforcedataapiconfigtest\set-event_variable_1.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\contacts\search:salesforce-data-api-config" doc:id="31022219-6714-4b8e-8050-940e65911db2" name="get:\contacts\search:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="4a71af3b-091c-41b4-a798-eb0ae982f4e3" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getcontactssearchsalesforcedataapiconfigtest::assert_expression_payload1
---
assert_expression_payload1::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="83c57744-8200-487f-9ff6-d386c09095bd" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="32f388c1-5da5-43ab-8241-874d02d18d35" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Store Query parameters" doc:id="28938f45-4aea-43c4-b571-55f058680bbe" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="06bf0ffb-bedf-4d91-afb9-accd04fb3580" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Log entry-flow" doc:id="f22191a8-2b8b-40c4-a46d-50fb00f8d2f2" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="127d162c-eb82-4c68-858e-cba3a849db5c" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>


</mule>
