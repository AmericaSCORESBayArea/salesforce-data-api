<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="salesforce-data-api-suite.xml" />
	<munit:test name="get:\coach\(coachId)\all:salesforce-data-api-config-test" doc:id="fb6467fc-0ce1-44fe-afc1-b70b8f10067c" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Query" doc:id="91540c62-0010-4577-8b68-5f5050e78cf6" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="30344094-f0f1-44d4-bdc9-9897cbc2a741" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getcoachcoachIdallsalesforcedataapiconfigtest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getcoachcoachIdallsalesforcedataapiconfigtest/mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://getcoachcoachIdallsalesforcedataapiconfigtest/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://getcoachcoachIdallsalesforcedataapiconfigtest/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="coachId" value="#[output application/java --- readUrl('classpath://getcoachcoachIdallsalesforcedataapiconfigtest/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="2c047659-aa53-41aa-af3e-cd42119920e5" >
				<munit:payload value="#[readUrl('classpath://getcoachcoachIdallsalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getcoachcoachIdallsalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getcoachcoachIdallsalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\coach\(coachId)\all:salesforce-data-api-config" doc:id="888cdbdf-6cfb-4c40-bfc6-4bad1a38686c" name="get:\coach\(coachId)\all:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="350f484a-6ebc-4379-80f0-c6fa3f94195b" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getcoachcoachIdallsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Store URI parameters" doc:id="e81020d2-d190-4c73-aeac-8803c001940b" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="6784dd16-d76e-4fa4-a526-ab370875d02b" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="662baeae-9eed-47bd-bf4f-f048623d9b51" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="2e4560c3-3fd9-4697-9927-098a4fdc0436" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="post:\coach\(coachId)\teamseasons\(teamSeasonId)\sessions\(sessionId)\attendances:application\json:salesforce-data-api-config-test" doc:id="8a869f09-c097-42be-b925-8ae5be847d88" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Upsert" doc:id="919ec506-2260-4a49-9c19-4ed74d8b925e" processor="salesforce:upsert">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="96226f7b-9c73-4b6c-80d2-bce874e4cfb2" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest/mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="sessionId" value="#[output application/java --- readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="teamSeasonId" value="#[output application/java --- readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest/mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="coachId" value="#[output application/java --- readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest/mock_variable_5.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="041b62aa-d0e9-4c87-9332-13c21c2edfde" >
				<munit:payload value="#[output application/json --- readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\coach\(coachId)\teamseasons\(teamSeasonId)\sessions\(sessionId)\attendances:application\json:salesforce-data-api-config" doc:id="bf089b9d-cdff-4623-8d85-9df66c723df9" name="post:\coach\(coachId)\teamseasons\(teamSeasonId)\sessions\(sessionId)\attendances:application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="b87ca0e7-d6b9-4457-a573-eaff98c7b438" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="128b0961-7c71-469e-8789-8a4e230e0db0" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="8f457d7a-237f-466a-b6f4-e3c73d016428" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Store URI parameters" doc:id="6cdd22b4-25b3-450d-be6f-68d5efc789fa" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="8524ed41-e212-445a-831b-feba8c6c9a9a" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>

</mule>
