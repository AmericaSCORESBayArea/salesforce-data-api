<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="salesforce-data-api-suite.xml" />
	<global-property doc:name="Global Property" doc:id="b0c78ee5-eea5-4c2c-a827-4d94f2e878c6" name="env" value="munit" />
	<munit:test name="get:\coach\(coachId)\teamseasons\(teamSeasonId)\sessions\(sessionId)\attendances:salesforce-data-api-config-test" doc:id="a6e6ea7d-ccf9-4f73-b547-5c5c0233ac12" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Query" doc:id="7cd992e1-886a-42ef-a114-0d3f49b47b34" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="2c95dcd3-8d07-446c-883b-98f1ae79ed9c" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancessalesforcedataapiconfigtest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancessalesforcedataapiconfigtest/mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancessalesforcedataapiconfigtest/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancessalesforcedataapiconfigtest/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="sessionId" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancessalesforcedataapiconfigtest/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="teamSeasonId" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancessalesforcedataapiconfigtest/mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="coachId" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancessalesforcedataapiconfigtest/mock_variable_5.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="9d85424e-73f2-41af-bf8f-824720e20e6c" >
				<munit:payload value="#[readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancessalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancessalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancessalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\coach\(coachId)\teamseasons\(teamSeasonId)\sessions\(sessionId)\attendances:salesforce-data-api-config" doc:id="43f61e51-d654-4eeb-8b5c-cdfc6ea07150" name="get:\coach\(coachId)\teamseasons\(teamSeasonId)\sessions\(sessionId)\attendances:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="c342fc43-03c1-430d-8819-eb6dc6536773" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancessalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Store URI parameters" doc:id="66657bbd-d916-4864-9c7b-f14eec128c11" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="86784c2c-83e8-4a5e-ae64-c5093cbacdbe" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="f5d239b0-30f5-4113-a6ff-9fe7f4493eba" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="cc0b30b2-4bb2-4b3c-bfa8-72626dc8dc02" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="post:\coach\(coachId)\teamseasons\(teamSeasonId)\sessions\(sessionId)\attendances:application\json:salesforce-data-api-config-test1" doc:id="a1df301a-ed0c-4b8d-a3ee-80a5980eb26d" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Upsert" doc:id="2cf14dec-f881-480a-a302-444e30fdca46" processor="salesforce:upsert">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="96226f7b-9c73-4b6c-80d2-bce874e4cfb2" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest1/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest1/mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest1/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest1/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="sessionId" value="#[output application/java --- readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest1/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="teamSeasonId" value="#[output application/java --- readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest1/mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="coachId" value="#[output application/java --- readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest1/mock_variable_5.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="13d63544-2e18-4357-a6c1-8ee92717ecaa" >
				<munit:payload value="#[output application/json --- readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest1/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest1/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest1/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\coach\(coachId)\teamseasons\(teamSeasonId)\sessions\(sessionId)\attendances:application\json:salesforce-data-api-config" doc:id="6c6ffa9a-df77-460d-a88c-55f83560a343" name="post:\coach\(coachId)\teamseasons\(teamSeasonId)\sessions\(sessionId)\attendances:application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="5510c7c9-464a-4ad9-8f11-5732df12a214" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest1::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Log Stored URI Params" doc:id="23a1408a-6d0b-47c9-90d6-a0ea5fd389e0" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="89586974-34cf-4491-9ece-93f323634c60" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Log entry-flow" doc:id="859e8f9c-de40-4621-871c-bf97b53fbc85" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c341f736-e33b-41d9-9587-79be5aded28f" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Store URI parameters" doc:id="07e60dde-49c3-45fc-ad6b-242636642c42" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="f711ee79-c3c7-4cdb-af46-28723e067b8f" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Log Upsert" doc:id="23c1a891-89ac-46b0-9f40-f12548bb9f01" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="3e70143c-8c88-4080-95ad-7efe4bd82a1e" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="95d00e38-9e2a-4e70-9521-8ff23e5ca5a0" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="02b48aab-bddb-4054-8872-ac1433da5ffd" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="post:\coach\(coachId)\teamseasons\(teamSeasonId)\sessions\(sessionId)\attendances:application\json:salesforce-data-api-config-test2" doc:id="de7429c8-0ce3-4431-8100-705735b5b3aa" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Upsert" doc:id="6692e674-b0bb-4b36-9317-943551cdd37d" processor="salesforce:upsert">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="96226f7b-9c73-4b6c-80d2-bce874e4cfb2" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest2/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest2/mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest2/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest2/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="sessionId" value="#[output application/java --- readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest2/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="teamSeasonId" value="#[output application/java --- readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest2/mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="coachId" value="#[output application/java --- readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest2/mock_variable_5.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="6749f323-f714-44f8-b68b-db85477b7d81" >
				<munit:payload value="#[output application/json --- readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest2/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest2/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest2/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\coach\(coachId)\teamseasons\(teamSeasonId)\sessions\(sessionId)\attendances:application\json:salesforce-data-api-config" doc:id="a544a16c-f9aa-4e34-970b-f503439805a2" name="post:\coach\(coachId)\teamseasons\(teamSeasonId)\sessions\(sessionId)\attendances:application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="2341e246-99f4-49d2-b4df-a2c56f96c0fd" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postcoachcoachIdteamseasonsteamSeasonIdsessionssessionIdattendancesapplicationjsonsalesforcedataapiconfigtest2::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Store URI parameters" doc:id="fe45d2f2-5d94-4aed-95c7-63922fe472e2" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="f711ee79-c3c7-4cdb-af46-28723e067b8f" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify entry-flow" doc:id="02c42133-0ea4-4083-8108-ce0db24f487a" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="319d3747-39e8-43d4-a9c2-9afd1935dd5e" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify exit flow" doc:id="5fa15c5f-97ab-483c-aaaf-8844c24bd6e4" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="32b947ab-3abc-4f72-b6a5-79c51e3e786f" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="58a819ed-eb66-4abb-bce2-94adfb778db3" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="02b48aab-bddb-4054-8872-ac1433da5ffd" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>



	<munit:test name="patch:\contacts\(id):application\json:salesforce-data-api-config-test" doc:id="ead69651-6a14-4631-aa89-032b34dc47a5" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Update" doc:id="51cd7fe9-983c-4a0b-8bbd-9f04816f57a9" processor="salesforce:update">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="22d1f2d0-03bc-4987-82e8-200abcd9b67a" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://patchcontactsidapplicationjsonsalesforcedataapiconfigtest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://patchcontactsidapplicationjsonsalesforcedataapiconfigtest/mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://patchcontactsidapplicationjsonsalesforcedataapiconfigtest/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://patchcontactsidapplicationjsonsalesforcedataapiconfigtest/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="id" value="#[output application/java --- readUrl('classpath://patchcontactsidapplicationjsonsalesforcedataapiconfigtest/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="027bac86-96fd-4c83-927b-a7782b4e91d5" >
				<munit:payload value="#[output application/json --- readUrl('classpath://patchcontactsidapplicationjsonsalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://patchcontactsidapplicationjsonsalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://patchcontactsidapplicationjsonsalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to patch:\contacts\(id):application\json:salesforce-data-api-config" doc:id="b3daf84a-2b4d-486f-9b35-8946b7921167" name="patch:\contacts\(contactId):application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="4175422c-6e1e-4ae2-855c-54ed161ec458" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import patchcontactsidapplicationjsonsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\contacts:salesforce-data-api-config-test" doc:id="2632a176-811c-4767-9573-2557c4957fd5" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Query" doc:id="1fffb7c4-dea9-464a-911c-d8767522e09c" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="2d2bd613-7cc8-48df-b3e3-e1c628982996" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getcontactssalesforcedataapiconfigtest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="firstName" value="#[output application/java --- readUrl('classpath://getcontactssalesforcedataapiconfigtest/mock_variable_.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="lastName" value="#[output application/java --- readUrl('classpath://getcontactssalesforcedataapiconfigtest/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getcontactssalesforcedataapiconfigtest/mock_variable_2.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://getcontactssalesforcedataapiconfigtest/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="dcyfId" value="#[output application/java --- readUrl('classpath://getcontactssalesforcedataapiconfigtest/mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://getcontactssalesforcedataapiconfigtest/mock_variable_5.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="birthDate" value="#[output application/java --- readUrl('classpath://getcontactssalesforcedataapiconfigtest/mock_variable_6.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="d03ee2f4-e928-43cc-b56e-f1f0e535da48" >
				<munit:payload value="#[readUrl('classpath://getcontactssalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getcontactssalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getcontactssalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\contacts:salesforce-data-api-config" doc:id="c3d5e60f-97db-4cf9-ba57-5fe52f0d567b" name="get:\contacts:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="f78cd1b4-a106-42b7-9fdd-8645c9af34a8" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getcontactssalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\contacts\(id):salesforce-data-api-config-test" doc:id="74d322b9-25c8-4c52-b65d-6ef927c7532d" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Query" doc:id="c8ec148f-81d5-407a-9513-9171e4550c49" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="484bbe2a-c7aa-42d5-9463-cd953b4abb1e" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getcontactsidsalesforcedataapiconfigtest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="firstName" value="#[output application/java --- readUrl('classpath://getcontactsidsalesforcedataapiconfigtest/mock_variable_.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="lastName" value="#[output application/java --- readUrl('classpath://getcontactsidsalesforcedataapiconfigtest/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getcontactsidsalesforcedataapiconfigtest/mock_variable_2.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://getcontactsidsalesforcedataapiconfigtest/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://getcontactsidsalesforcedataapiconfigtest/mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="id" value="#[output application/java --- readUrl('classpath://getcontactsidsalesforcedataapiconfigtest/mock_variable_5.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="birthDate" value="#[output application/java --- readUrl('classpath://getcontactsidsalesforcedataapiconfigtest/mock_variable_6.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="757dc9eb-fce1-430f-9ef7-70ca1d6c25be" >
				<munit:payload value="#[output application/json --- readUrl('classpath://getcontactsidsalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://getcontactsidsalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getcontactsidsalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\contacts\(id):salesforce-data-api-config" doc:id="c12bee89-f8b4-485b-8976-83f6eb60b42f" name="get:\contacts\(contactId):salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="a907a8cb-3ffc-4bbe-8903-b3dd597046bd" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getcontactsidsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\coach\(coachId)\teamseasons\(teamSeasonId)\enrollments:salesforce-data-api-config-test" doc:id="de886428-d785-4b34-b34b-e7e318939d37" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Query" doc:id="71042d37-b2c6-44cd-b362-4bb5850d5c71" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="2938911f-53b8-43a5-a53e-14fca711003d" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdenrollmentssalesforcedataapiconfigtest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdenrollmentssalesforcedataapiconfigtest/mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdenrollmentssalesforcedataapiconfigtest/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdenrollmentssalesforcedataapiconfigtest/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="coachId" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdenrollmentssalesforcedataapiconfigtest/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="teamSeasonId" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdenrollmentssalesforcedataapiconfigtest/mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="76df3d27-1ed8-4efa-bd41-19a22c47fef5" >
				<munit:payload value="#[readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdenrollmentssalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdenrollmentssalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdenrollmentssalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\coach\(coachId)\teamseasons\(teamSeasonId)\enrollments:salesforce-data-api-config" doc:id="fc2b10b1-ab2e-48ab-b6dd-da6af4e2bf2e" name="get:\coach\(coachId)\teamseasons\(teamSeasonId)\enrollments:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="a2bf259b-dd79-4012-80a9-7e6aaca91a0d" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getcoachcoachIdteamseasonsteamSeasonIdenrollmentssalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="3620c47c-3811-41cd-8548-6ae13a5aa41d" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="f83b6a71-b77b-42de-871b-11e4a3508eb1" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Store URI parameters" doc:id="07a81ca8-6e5c-47c3-9e2a-1efdc93e404f" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="6ad6fba9-9cc0-4bc5-9582-39a1a552e4d3" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify exit flow" doc:id="318781c0-b5f6-4009-a9de-b01f9f870b83" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fc0d90c2-2581-49e2-aaef-d58ba1013d8e" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\coach\(coachId)\teamseasons\(teamSeasonId)\sessions:salesforce-data-api-config-test" doc:id="b80218aa-285e-403e-b05b-0d38d538ccb2" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Query" doc:id="2cfc75bf-f5da-48ea-b1d0-6f2bd43fc089" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="e2c7a8f4-85c1-4108-be94-83f757bfde43" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdsessionssalesforcedataapiconfigtest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdsessionssalesforcedataapiconfigtest/mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdsessionssalesforcedataapiconfigtest/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdsessionssalesforcedataapiconfigtest/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="coachId" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdsessionssalesforcedataapiconfigtest/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="teamSeasonId" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdsessionssalesforcedataapiconfigtest/mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="d5604342-0a2f-46d0-afb0-db1f1fd45729" >
				<munit:payload value="#[readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdsessionssalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdsessionssalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getcoachcoachIdteamseasonsteamSeasonIdsessionssalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\coach\(coachId)\teamseasons\(teamSeasonId)\sessions:salesforce-data-api-config" doc:id="8431b6db-7317-49e2-9518-27756139d1c2" name="get:\coach\(coachId)\teamseasons\(teamSeasonId)\sessions:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="fe4102d5-17f1-4099-8631-5f17de21c771" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getcoachcoachIdteamseasonsteamSeasonIdsessionssalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Store URI parameters" doc:id="931656fd-4b27-4683-ab37-2956089ee9b2" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="21103b85-d0a3-4a6c-949c-61d2eae5d2d2" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify exit flow" doc:id="27324039-27ba-42fd-bded-085a13eb130d" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="87c1ea24-9a65-4fdf-9651-94d38ae6b8ee" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="d324065a-15c8-48e9-bff4-5708a3cfcc13" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="25ad8f74-7ff6-412b-b6d5-47a7c9a81a01" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\teams\(teamId):salesforce-data-api-config-test" doc:id="138510c8-2cac-4a9c-82e1-e17cf4db9cbb">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Query" doc:id="52ee6ce4-1162-4eb9-8441-79625ed95886" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="f01262b6-4556-4307-add7-d706c71ce2e7" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getteamsteamIdsalesforcedataapiconfigtest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getteamsteamIdsalesforcedataapiconfigtest/mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://getteamsteamIdsalesforcedataapiconfigtest/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="teamId" value="#[output application/java --- readUrl('classpath://getteamsteamIdsalesforcedataapiconfigtest/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://getteamsteamIdsalesforcedataapiconfigtest/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="f8715e81-a136-49b4-a838-d28a564cc2ce" >
				<munit:payload value="#[readUrl('classpath://getteamsteamIdsalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getteamsteamIdsalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getteamsteamIdsalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\teams\(teamId):salesforce-data-api-config" doc:id="d449a5e2-871d-49a9-944f-7e4177ca8122" name="get:\teams\(teamId):salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="cbdb6c40-cde6-4295-a9b8-0759314d6935" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getteamsteamIdsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Store URI parameters" doc:id="4da7fe56-8f25-4a6f-8067-3164aa49fc23" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="1a434c01-2c10-40f4-b8a7-bf89e99b2bbf" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="69b36a5d-cfb5-4ac0-8499-f29ec57e889c" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="a43c786b-8e5a-4437-ab6f-006a57b10578" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify exit flow" doc:id="ae721efc-6a1d-471f-b00d-05530670b5b5" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="e4f42792-044a-444f-8033-9f86273d9801" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="post:\contacts:application\json:salesforce-data-api-config-test" doc:id="55c1ad1b-83c9-4d14-bceb-fb852938c016" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Create" doc:id="69a86dd8-929d-40b7-8b31-bc78665b2d64" processor="salesforce:create">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="45632d40-a2a7-4304-930a-a2fa81d78f0d" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtest/mock_variable_.dwl')]" />
						<munit-tools:variable key="stored_payload" value="#[output application/json --- readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtest/mock_variable_1.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="ContactRecordType" value="#[output application/java --- readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtest/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Query" doc:id="40b17628-93b5-41fc-bac5-fd401428ee09" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="61c0f5f7-6cee-4580-a92a-2432384dba3c" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtest/mock_payload1.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtest/mock_variable_3.dwl')]" />
						<munit-tools:variable key="stored_payload" value="#[output application/json --- readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtest/mock_variable_4.dwl')]" mediaType="application/json" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="07850f72-4554-4539-8e4d-dcb7c81ddfd7" >
				<munit:payload value="#[output application/json --- readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\contacts:application\json:salesforce-data-api-config" doc:id="e811d947-cf77-4acc-88e6-662d385595cc" name="post:\contacts:application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="71f5015a-a885-4e14-8663-4ffb08168ebc" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postcontactsapplicationjsonsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\contacts:salesforce-data-api-config-test-without-birthdate" doc:id="ec4188fd-4a53-4672-bc20-60d17e39e1c1" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Select Query without Birthdate" doc:id="74164b0d-a737-4556-acc9-a244944a3954" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="ec730d90-d661-40ce-b9c0-d05dd4fc28a0" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getcontactssalesforcedataapiconfigtestwithoutbirthdate/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="firstName" value="#[output application/java --- readUrl('classpath://getcontactssalesforcedataapiconfigtestwithoutbirthdate/mock_variable_.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="lastName" value="#[output application/java --- readUrl('classpath://getcontactssalesforcedataapiconfigtestwithoutbirthdate/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getcontactssalesforcedataapiconfigtestwithoutbirthdate/mock_variable_2.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://getcontactssalesforcedataapiconfigtestwithoutbirthdate/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="dcyfId" value="#[output application/java --- readUrl('classpath://getcontactssalesforcedataapiconfigtestwithoutbirthdate/mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://getcontactssalesforcedataapiconfigtestwithoutbirthdate/mock_variable_5.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="birthDate" value="#[output application/java --- readUrl('classpath://getcontactssalesforcedataapiconfigtestwithoutbirthdate/mock_variable_6.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="664aab07-6eb6-4bae-9b6d-86b2cbf5eb24" >
				<munit:payload value="#[readUrl('classpath://getcontactssalesforcedataapiconfigtestwithoutbirthdate/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getcontactssalesforcedataapiconfigtestwithoutbirthdate/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getcontactssalesforcedataapiconfigtestwithoutbirthdate/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\contacts:salesforce-data-api-config" doc:id="b026a2a0-09d3-497b-beff-07494186eaf6" name="get:\contacts:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="87776c1e-6c34-459c-98dc-05c5ee63c5a5" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getcontactssalesforcedataapiconfigtestwithoutbirthdate::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Log Created Response" doc:id="d0bc9952-c487-4254-95e7-9090a481c9c8" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="b374f207-dfe3-48d7-99a2-b74e757cdb96" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Create Response" doc:id="7e4fa06b-8437-4387-98c0-fa6424029ee5" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Create Response" attributeName="doc:name" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify exit flow" doc:id="5ab74355-a083-4a11-b0f6-f8daf82965b8" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="17176b6b-a1c0-4851-984e-43b59c0506eb" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\sessions:salesforce-data-api-config-test" doc:id="f97c5b55-a441-455b-a7f9-dfafcbc5f1a1" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Select Query with TeamSeasonId and Date" doc:id="dd0de3c3-6a63-47ec-a3a5-89554b0f39a9" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="2d500270-3028-493a-8b00-60506980b70a" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getsessionssalesforcedataapiconfigtest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getsessionssalesforcedataapiconfigtest/mock_variable_.dwl')]" />
						<munit-tools:variable key="date" value="#[output application/java --- readUrl('classpath://getsessionssalesforcedataapiconfigtest/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://getsessionssalesforcedataapiconfigtest/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://getsessionssalesforcedataapiconfigtest/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="teamSeasonId" value="#[output application/java --- readUrl('classpath://getsessionssalesforcedataapiconfigtest/mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="4677bca1-fcd1-47e6-a5cf-95742fe7f138" >
				<munit:payload value="#[readUrl('classpath://getsessionssalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getsessionssalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getsessionssalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\sessions:salesforce-data-api-config" doc:id="5fceb0e2-79fe-466e-b7c8-42acd7ff6db5" name="get:\sessions:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="95b35ae6-a41e-4e0c-926a-84e211dcfb4a" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getsessionssalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify exit flow" doc:id="f0f9141a-035a-48c3-9e3a-c7c4553c1b79" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="a04ca980-be0b-413d-b9dc-eecf1a3c44a4" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Create Response" doc:id="e566799b-8f94-4dc2-b4d7-848507e74a14" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Create Response" attributeName="doc:name" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Log Created Response" doc:id="6ec16466-27d1-4a6c-a15d-4359b7153dd0" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="a55ca7d7-71b4-4e6f-b7b3-df14914f05b8" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\sessions\(sessionId):salesforce-data-api-config-test" doc:id="16e1a650-af89-4611-b832-7e5f41d434b0" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Select Query with sessionId" doc:id="c9bc3205-27c5-4ef7-91f5-5fc6a98f3e42" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="a78aa9c2-d524-4535-a0bc-fd81ae881144" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getsessionssessionIdsalesforcedataapiconfigtest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getsessionssessionIdsalesforcedataapiconfigtest/mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://getsessionssessionIdsalesforcedataapiconfigtest/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://getsessionssessionIdsalesforcedataapiconfigtest/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="sessionId" value="#[output application/java --- readUrl('classpath://getsessionssessionIdsalesforcedataapiconfigtest/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="1cc1d77d-34ce-4009-8b59-834da2228ec7" >
				<munit:attributes value="#[readUrl('classpath://getsessionssessionIdsalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getsessionssessionIdsalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\sessions\(sessionId):salesforce-data-api-config" doc:id="0e7db715-11e5-48d0-83bc-d2c6681871d5" name="get:\sessions\(sessionId):salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="8ec8bc39-6f33-41ad-8fba-9b9ca94a331c" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getsessionssessionIdsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Create Response" doc:id="6195138b-f8d9-4b3a-a450-49bcccacbccf" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="38b8c4e6-30f7-47de-ab7f-fe680da96cfe" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Log Created Response" doc:id="70e26ed5-f9db-44a3-86f4-9934dffed7be" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="9f51f8cb-2fe7-47f6-ab71-ed83c083b03f" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify exit flow" doc:id="82978ddb-263a-4ed4-acba-649467623db8" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="bf419d54-fe15-4be1-ba03-e1333c223a68" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="patch:\sessions\(sessionId):application\json:salesforce-data-api-config-test" doc:id="626e7e87-5a44-44a3-b5f2-33ca15f274b4" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Update" doc:id="673f183a-1ad2-4d60-aef9-0626fffd5684" processor="salesforce:update">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="f6c9dade-b97e-4331-a976-cbf18429ab2e" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://patchsessionssessionIdapplicationjsonsalesforcedataapiconfigtest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://patchsessionssessionIdapplicationjsonsalesforcedataapiconfigtest/mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://patchsessionssessionIdapplicationjsonsalesforcedataapiconfigtest/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://patchsessionssessionIdapplicationjsonsalesforcedataapiconfigtest/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="sessionId" value="#[output application/java --- readUrl('classpath://patchsessionssessionIdapplicationjsonsalesforcedataapiconfigtest/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="6227a8ba-dd83-487f-aa6e-4c0dabcb5fa7" >
				<munit:payload value="#[output application/json --- readUrl('classpath://patchsessionssessionIdapplicationjsonsalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://patchsessionssessionIdapplicationjsonsalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://patchsessionssessionIdapplicationjsonsalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to patch:\sessions\(sessionId):application\json:salesforce-data-api-config" doc:id="03cf66d8-6df5-41c1-8aa9-5391ea362496" name="patch:\sessions\(sessionId):application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="9cf5db1e-0998-47ac-bee3-9c73bcc1cd38" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import patchsessionssessionIdapplicationjsonsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify exit flow" doc:id="ac86391f-d575-4f1a-8260-5795fb7059ce" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="da67b299-2e89-4f51-ae88-e9850ffdd6e1" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Log Created Response" doc:id="df8bb5f8-9397-4aff-bf16-a234d6e62adc" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="7e8446e9-40a5-44d6-8ed9-e56b8ac38304" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Create Response" doc:id="958e6e53-8f5a-4a7d-9d18-a0ce323b4eec" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="670a74ce-14c7-4302-80c8-99b2088d97db" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="post:\sessions:application\json:salesforce-data-api-config-test-error" doc:id="53c46f2c-1db1-45a9-96b0-53fd01c2c4be" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Create" doc:id="248bd1a6-71b7-4780-8fdd-7c622ad45900" processor="salesforce:create">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="f0aede51-1b0e-4ad8-84d5-f634035fa14e" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://postsessionsapplicationjsonsalesforcedataapiconfigtesterror/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postsessionsapplicationjsonsalesforcedataapiconfigtesterror/mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://postsessionsapplicationjsonsalesforcedataapiconfigtesterror/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://postsessionsapplicationjsonsalesforcedataapiconfigtesterror/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="e9f4b3f8-e0bd-4a9b-b326-1f3580e7d550" >
				<munit:payload value="#[output application/json --- readUrl('classpath://postsessionsapplicationjsonsalesforcedataapiconfigtesterror/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://postsessionsapplicationjsonsalesforcedataapiconfigtesterror/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postsessionsapplicationjsonsalesforcedataapiconfigtesterror/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\sessions:application\json:salesforce-data-api-config" doc:id="0135e696-c523-427c-b297-232609027fa8" name="post:\sessions:application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="79607db3-a646-4ea3-82fb-92405a31497e" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postsessionsapplicationjsonsalesforcedataapiconfigtesterror::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify exit flow" doc:id="7cba334c-9341-456c-8d90-a71a9fed4d14" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="624f9ac8-50af-4be5-b824-2b6e271fb57e" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Log Created Response" doc:id="bb2bedc6-da48-448c-9308-0120363389cd" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="2ac25a66-cb92-43f4-b398-69143e6612fe" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Create Error Response" doc:id="5ec4aa4d-87fd-4c18-84f8-0765655ab36c" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="f001f891-4371-4b36-bedc-dc638c2923ef" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="post:\sessions:application\json:salesforce-data-api-config-test" doc:id="24e458b6-7d66-4387-98e4-31161f97ba7c" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Create" doc:id="9c0e38a9-7828-4188-b65e-7a6420f77d2a" processor="salesforce:create">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="f0aede51-1b0e-4ad8-84d5-f634035fa14e" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://postsessionsapplicationjsonsalesforcedataapiconfigtest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postsessionsapplicationjsonsalesforcedataapiconfigtest/mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://postsessionsapplicationjsonsalesforcedataapiconfigtest/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://postsessionsapplicationjsonsalesforcedataapiconfigtest/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="080a7faa-3756-492c-b08b-ec6730d593eb" >
				<munit:payload value="#[output application/json --- readUrl('classpath://postsessionsapplicationjsonsalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://postsessionsapplicationjsonsalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postsessionsapplicationjsonsalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\sessions:application\json:salesforce-data-api-config" doc:id="3cd5d4c4-5dab-4b08-bfb2-a0944e2a5582" name="post:\sessions:application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="c1a6ca16-29c0-442b-8a83-2cacea166453" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postsessionsapplicationjsonsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Create Response" doc:id="35cf5dd5-6305-42e8-ade5-814f4ad6f07d" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="ff94dfa8-e1fe-445f-920b-5c9f3ebf43c0" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify exit flow" doc:id="27b87273-60d7-452d-b626-a41cca0a02ce" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="624f9ac8-50af-4be5-b824-2b6e271fb57e" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Log Created Response" doc:id="38a0aaea-a400-42d6-91dc-826dd9efd9db" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="2ac25a66-cb92-43f4-b398-69143e6612fe" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\enrollments:salesforce-data-api-config-test" doc:id="f0b597e7-aa3f-41c0-9862-8b4dd09f63cb" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Select Query with TeamSeasonId" doc:id="eae01e9e-ef85-4d7c-9ff6-b7d34ad45b32" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="7b21e772-69d1-4a72-823f-2ca961976a98" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getenrollmentssalesforcedataapiconfigtest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getenrollmentssalesforcedataapiconfigtest/mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://getenrollmentssalesforcedataapiconfigtest/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://getenrollmentssalesforcedataapiconfigtest/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="teamSeasonId" value="#[output application/java --- readUrl('classpath://getenrollmentssalesforcedataapiconfigtest/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="c36df593-91a9-44df-ba44-d6d01c148f0f" >
				<munit:attributes value="#[readUrl('classpath://getenrollmentssalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getenrollmentssalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\enrollments:salesforce-data-api-config" doc:id="aa22849d-1799-49a7-bd05-e63b4d6deda2" name="get:\enrollments:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="15fe02be-4462-497f-b04f-82ea0f479e34" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getenrollmentssalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Log Created Response" doc:id="a60638b9-e02d-4540-b568-6536d2df2c75" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="5d6097dd-a131-4189-b701-aa8a8642bc81" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Create Response" doc:id="42f9fcda-db6c-48d7-91f5-cddef8fca4e8" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="7f248e8c-5c33-48cd-beb3-6e53050d6319" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify exit flow" doc:id="2559ce4d-6696-4a13-ae95-08650e793578" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c35f88dd-0ae5-41f8-bfe5-0dd76ae0d85c" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\enrollments\(enrollmentId):salesforce-data-api-config-test" doc:id="4279ab87-22bd-44bc-b02c-f0aed57ca825" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Select Query with EnrollmentId" doc:id="9eb02d25-a022-4cf2-aabb-96c0732c0be4" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="10beab2b-2673-4fd0-9e37-d7e205da05ba" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getenrollmentsenrollmentIdsalesforcedataapiconfigtest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="enrollmentId" value="#[output application/java --- readUrl('classpath://getenrollmentsenrollmentIdsalesforcedataapiconfigtest/mock_variable_.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getenrollmentsenrollmentIdsalesforcedataapiconfigtest/mock_variable_1.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://getenrollmentsenrollmentIdsalesforcedataapiconfigtest/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://getenrollmentsenrollmentIdsalesforcedataapiconfigtest/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="f70ca650-b964-42f6-9372-dba8afb1649e" >
				<munit:attributes value="#[readUrl('classpath://getenrollmentsenrollmentIdsalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getenrollmentsenrollmentIdsalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\enrollments\(enrollmentId):salesforce-data-api-config" doc:id="c0426f49-8893-4013-ac44-70e2f6ba0202" name="get:\enrollments\(enrollmentId):salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="004f7051-4642-417c-8291-42dde5d62a1b" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getenrollmentsenrollmentIdsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Log Created Response" doc:id="8e2f3226-f5bf-4db4-8d32-e2b77e8a53ef" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="154e2941-1611-4c9d-864e-0ce9c0473ee7" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Create Response" doc:id="03ff1fef-d30a-41a7-aebe-88d82fb8dfd9" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="b58f80e5-f19b-40b8-ae19-235e06068521" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify exit flow" doc:id="0c6af513-b394-443d-b1d9-ba86203ee59c" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="30472418-e1b3-44e3-80f6-a3b13621f1c7" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="patch:\enrollments\(enrollmentId):application\json:salesforce-data-api-config-test" doc:id="2c3decdc-90e5-47f7-8534-e89e3a48ebfc" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Update" doc:id="e08de304-ce13-41a1-98eb-4f248938d932" processor="salesforce:update">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="44afbe5c-68ce-4f65-bd99-38adf52e2b50" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="enrollmentId" value="#[output application/java --- readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest/mock_variable_.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest/mock_variable_1.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="f4250732-66aa-4292-9d2e-4a5f74d5a044" >
				<munit:payload value="#[output application/json --- readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to patch:\enrollments\(enrollmentId):application\json:salesforce-data-api-config" doc:id="5659a9bb-9196-4f84-94da-ea9a23acd93e" name="patch:\enrollments\(enrollmentId):application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="2808dadd-63e8-4a0b-8c19-7d7c5f12f091" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Create Error Response" doc:id="f24dcfc1-9b3f-44eb-81ec-bd7d359b77b8" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="7ada2379-59ce-4908-b07b-a6b617a822ef" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Log Created Response" doc:id="5d5c44af-699c-493b-bbf7-4f020bee2650" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="0f14ac89-9d8a-42cc-9bf8-dbe5d24c5980" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify exit flow" doc:id="5193cf35-d951-4a9f-b7d4-6802081c3385" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fb4ee683-8e4e-419a-b6e6-52bdb9977b10" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="patch:\enrollments\(enrollmentId):application\json:salesforce-data-api-config-test1" doc:id="1fd6ce11-8f17-416e-8776-966062327457" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Update" doc:id="ebc1cfb3-26b5-449d-ad34-9fc82394f833" processor="salesforce:update">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="44afbe5c-68ce-4f65-bd99-38adf52e2b50" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest1/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="enrollmentId" value="#[output application/java --- readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest1/mock_variable_.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest1/mock_variable_1.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest1/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest1/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="91c400d1-e8cc-4c08-9dfc-43b136cc5cfe" >
				<munit:payload value="#[output application/json --- readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest1/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest1/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest1/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to patch:\enrollments\(enrollmentId):application\json:salesforce-data-api-config" doc:id="124b16ef-35b4-4584-8b54-7210094d8598" name="patch:\enrollments\(enrollmentId):application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="ce288700-f227-4e35-966a-a9f7a854ae0c" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import patchenrollmentsenrollmentIdapplicationjsonsalesforcedataapiconfigtest1::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Create Response" doc:id="d9ef0738-3582-4316-9d6b-ac34455d6328" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="df7487db-f467-4cf5-ba4a-d38339357b91" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Log Created Response" doc:id="41bed9e6-8902-419c-9b0e-e0e1ff28d3c4" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="0f14ac89-9d8a-42cc-9bf8-dbe5d24c5980" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify exit flow" doc:id="975e1209-2a24-42ee-861b-d5c6139f122c" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fb4ee683-8e4e-419a-b6e6-52bdb9977b10" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="post:\enrollments:application\json:salesforce-data-api-config-test" doc:id="664b904a-d8f5-4b9f-9f0a-08a7ccbc350e" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Create" doc:id="37f61719-b596-4465-8a48-34676f089878" processor="salesforce:create">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="12e0dce5-2d49-4d47-a1b9-a557c1e1cd15" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://postenrollmentsapplicationjsonsalesforcedataapiconfigtest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postenrollmentsapplicationjsonsalesforcedataapiconfigtest/mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://postenrollmentsapplicationjsonsalesforcedataapiconfigtest/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://postenrollmentsapplicationjsonsalesforcedataapiconfigtest/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="6f564665-6e6e-49ab-83cc-d1f6c0b955e4" >
				<munit:payload value="#[output application/json --- readUrl('classpath://postenrollmentsapplicationjsonsalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://postenrollmentsapplicationjsonsalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postenrollmentsapplicationjsonsalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\enrollments:application\json:salesforce-data-api-config" doc:id="23b14b73-b44b-4cc6-a94f-137a8d1c26b1" name="post:\enrollments:application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="95fcbdea-da7c-49df-8abe-bbb43210c6f4" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postenrollmentsapplicationjsonsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify exit flow" doc:id="678e77e3-1765-49f0-a5ca-5ca500578f2c" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="4519e08e-bde3-4e28-8032-a874b23f0f1a" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Log Created Response" doc:id="18f68a22-0f14-4442-b474-c53e976022ad" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="4670a9f1-4aa5-4cfa-adc7-d09fbba15dce" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Create Response" doc:id="2337d0c3-a0da-41d3-90c4-e7e0fb0eb15a" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="41697d23-fc1d-4997-b18b-54bd0ead2b8c" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="patch:\teams\(teamId):application\json:salesforce-data-api-config-test" doc:id="b5f69b6e-6893-4995-a869-dd651a05c256" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="b03b0fa2-0f8b-416f-a640-701c01b194b1" >
				<munit:payload value="#[output application/json --- readUrl('classpath://patchteamsteamIdapplicationjsonsalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://patchteamsteamIdapplicationjsonsalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://patchteamsteamIdapplicationjsonsalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to patch:\teams\(teamId):application\json:salesforce-data-api-config" doc:id="bfa1548d-60bb-4701-8268-8db8d41287a7" name="patch:\teams\(teamId):application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="7cf38fe2-ca48-409f-8350-889987c012d4" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import patchteamsteamIdapplicationjsonsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\teams:salesforce-data-api-config-test" doc:id="00d39136-ba67-4832-a14c-cd62e5b6dafb" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="9936e811-b04a-4b1f-9185-511359c6b5cb" >
				<munit:payload value="#[readUrl('classpath://getteamssalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getteamssalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getteamssalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\teams:salesforce-data-api-config" doc:id="e81d1264-2d45-44b9-a1c2-334b90b4454e" name="get:\teams:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="dc2fe314-cb8a-48c1-8f1e-6e080970779d" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getteamssalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\teamSeasons\(teamSeasonId):salesforce-data-api-config-test" doc:id="1fbd8b50-79f0-40df-9731-fb034aff5a24" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="5bc59d80-b817-4b61-9270-595a7620b465" >
				<munit:payload value="#[readUrl('classpath://getteamSeasonsteamSeasonIdsalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getteamSeasonsteamSeasonIdsalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getteamSeasonsteamSeasonIdsalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\teamSeasons\(teamSeasonId):salesforce-data-api-config" doc:id="c19c7ab1-60cc-45aa-87b5-d4d908d05e0f" name="get:\teamSeasons\(teamSeasonId):salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="bbd4c849-fb13-4d57-b831-44740dc6473e" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getteamSeasonsteamSeasonIdsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="post:\teamSeasons:application\json:salesforce-data-api-config-test" doc:id="12e6eb69-7225-409f-aa56-97cc409096d3" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="328e8482-8a63-4aa5-8d26-b5a5f56517af" >
				<munit:payload value="#[output application/json --- readUrl('classpath://postteamSeasonsapplicationjsonsalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://postteamSeasonsapplicationjsonsalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postteamSeasonsapplicationjsonsalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\teamSeasons:application\json:salesforce-data-api-config" doc:id="bf45c341-db06-4c09-a53a-14b8d9f12896" name="post:\teamSeasons:application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="730c931c-f971-4d18-a392-0ab737ed5836" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postteamSeasonsapplicationjsonsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="post:\teams:application\json:salesforce-data-api-config-test" doc:id="85e8570f-9f6d-4a6b-a83e-eb5e6c94ba09" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="69e00882-650f-4702-9792-8ed4dfd1a8f9" >
				<munit:payload value="#[output application/json --- readUrl('classpath://postteamsapplicationjsonsalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://postteamsapplicationjsonsalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postteamsapplicationjsonsalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\teams:application\json:salesforce-data-api-config" doc:id="ef8fab7e-60dd-48dc-b688-4ff401b5d38a" name="post:\teams:application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="198150c9-9441-4b13-92b1-b9e293e8c5dd" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postteamsapplicationjsonsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="post:\attendances:application\json:salesforce-data-api-config-test" doc:id="2d910a7c-8b22-4473-82de-781da79492d9" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Upsert" doc:id="bebb2e98-2455-4116-a2de-b0e3445cc244" processor="salesforce:upsert">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="4d233e6e-69b4-4f9d-89ee-4839571ab171" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://postattendancesapplicationjsonsalesforcedataapiconfigtest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postattendancesapplicationjsonsalesforcedataapiconfigtest/mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://postattendancesapplicationjsonsalesforcedataapiconfigtest/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://postattendancesapplicationjsonsalesforcedataapiconfigtest/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="1f19f81b-2ee4-4a44-b0f6-abf83d2bfe4e" >
				<munit:payload value="#[output application/json --- readUrl('classpath://postattendancesapplicationjsonsalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://postattendancesapplicationjsonsalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postattendancesapplicationjsonsalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\attendances:application\json:salesforce-data-api-config" doc:id="0a9a935c-39e4-4e81-b726-47b10dc78329" name="post:\attendances:application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="95ce6259-86ee-4ab1-9223-589bb7fbd7b8" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postattendancesapplicationjsonsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Create response" doc:id="173f4c48-c87b-42f1-a2cf-0d91831c7642" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="b1e33ff7-6e73-4898-8ea2-4134f7f4ed17" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify exit flow" doc:id="ad089e7c-4a56-46e9-8349-d700222349bc" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="37b06898-f43a-4d5a-ae2a-00bee3f194ce" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\coach\(coachId)\teamseasonsNotOwnedByCoach:salesforce-data-api-config-test" doc:id="3e4604f7-6b5d-47c4-a9c9-62adbe59a205" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Query" doc:id="5265ef33-0239-4a0c-8ce9-54779aaa8bc7" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="cf0e3b35-eb45-4493-b40a-ab9cd3f99273" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsNotOwnedByCoachsalesforcedataapiconfigtest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getcoachcoachIdteamseasonsNotOwnedByCoachsalesforcedataapiconfigtest\mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsNotOwnedByCoachsalesforcedataapiconfigtest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="season" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsNotOwnedByCoachsalesforcedataapiconfigtest\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsNotOwnedByCoachsalesforcedataapiconfigtest\mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="region" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsNotOwnedByCoachsalesforcedataapiconfigtest\mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="teamSeasonId" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsNotOwnedByCoachsalesforcedataapiconfigtest\mock_variable_5.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="coachId" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonsNotOwnedByCoachsalesforcedataapiconfigtest\mock_variable_6.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="f8f63c0b-c586-4655-83fd-ab1a76294405" >
				<munit:payload value="#[readUrl('classpath://getcoachcoachIdteamseasonsNotOwnedByCoachsalesforcedataapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getcoachcoachIdteamseasonsNotOwnedByCoachsalesforcedataapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getcoachcoachIdteamseasonsNotOwnedByCoachsalesforcedataapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\coach\(coachId)\teamseasonsNotOwnedByCoach:salesforce-data-api-config" doc:id="2d643e47-1ab5-4e31-8100-25be2bddd27c" name="get:\coach\(coachId)\teamseasonsNotOwnedByCoach:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="fde58b1f-959e-4263-99eb-d095e2ad12be" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getcoachcoachIdteamseasonsNotOwnedByCoachsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Log Created Response" doc:id="859d2c71-3499-41ae-ad5d-571c685de737" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="d8ecc282-d9e5-4701-9daa-79d507b4401e" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Create Response" doc:id="305cc1d5-4144-471e-9170-342e561f6635" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="9fa45ae2-07a4-4857-af7c-7487c2fe453c" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify exit flow" doc:id="64c7ccfa-1945-4239-9e47-95bcbf96d6c0" processor="flow-ref" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="90679941-f7e0-4b12-a9fe-f461fb6ca5dc" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="patch:\teamSeasons\(teamSeasonId):application\json:salesforce-data-api-config-test" doc:id="c4b85842-3372-4b66-959d-4c1e6b64bf77" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Update" doc:id="7b4e8ebf-3c34-46ce-9f09-e0145af1d360" processor="salesforce:update">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="6e73b821-a977-41ee-87e6-ccd2b9b49342" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://patchteamSeasonsteamSeasonIdapplicationjsonsalesforcedataapiconfigtest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://patchteamSeasonsteamSeasonIdapplicationjsonsalesforcedataapiconfigtest\mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://patchteamSeasonsteamSeasonIdapplicationjsonsalesforcedataapiconfigtest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://patchteamSeasonsteamSeasonIdapplicationjsonsalesforcedataapiconfigtest\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="teamSeasonId" value="#[output application/java --- readUrl('classpath://patchteamSeasonsteamSeasonIdapplicationjsonsalesforcedataapiconfigtest\mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="821c6237-b8d8-4afb-a718-47d5147aa67a" >
				<munit:payload value="#[output application/json --- readUrl('classpath://patchteamSeasonsteamSeasonIdapplicationjsonsalesforcedataapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://patchteamSeasonsteamSeasonIdapplicationjsonsalesforcedataapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://patchteamSeasonsteamSeasonIdapplicationjsonsalesforcedataapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to patch:\teamSeasons\(teamSeasonId):application\json:salesforce-data-api-config" doc:id="fad252bf-50c7-48a4-9089-e9cd36ed9df1" name="patch:\teamSeasons\(teamSeasonId):application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="a8e5d933-0351-42b6-8cdd-726e3c4274c5" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import patchteamSeasonsteamSeasonIdapplicationjsonsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Log entry-flow" doc:id="c1e7a118-fef4-4caa-b842-e4e86a5951ea" processor="logger" times="1">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="aea001ef-efb0-4a3b-9bfc-a5384e805327" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Store URI parameters" doc:id="da82afb5-69b3-4a94-a0ea-da72d8bf4a9f" processor="ee:transform" times="1">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="eca43153-b0a0-46d3-b564-69a4019ef7af" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Create Request" doc:id="f42cfc23-d3a3-499c-8aa6-eb9f728a61c1" processor="ee:transform" times="1">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="0c469ff4-bb15-41cb-be7b-0d43f82a4b3f" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Log Created Response" doc:id="fb18336c-5518-4168-b360-2da312752750" processor="logger" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="a4c162aa-a505-4a66-a73f-e94b3d395f91" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\teamSeasons:salesforce-data-api-config-test1" doc:id="ed661441-e8ea-4510-add3-cc6b5e6e0e94" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Query" doc:id="79a2ba89-93bd-492e-8956-6d41bcada251" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="1423aba4-cdf4-47d8-a1f7-f904ebc68665" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getteamSeasonssalesforcedataapiconfigtest1\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getteamSeasonssalesforcedataapiconfigtest1\mock_variable_.dwl')]" />
						<munit-tools:variable key="date" value="#[output application/java --- readUrl('classpath://getteamSeasonssalesforcedataapiconfigtest1\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://getteamSeasonssalesforcedataapiconfigtest1\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://getteamSeasonssalesforcedataapiconfigtest1\mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="ea825a44-1d9d-48f9-8af4-2e765d1bce7e" >
				<munit:payload value="#[readUrl('classpath://getteamSeasonssalesforcedataapiconfigtest1\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getteamSeasonssalesforcedataapiconfigtest1\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getteamSeasonssalesforcedataapiconfigtest1\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\teamSeasons:salesforce-data-api-config" doc:id="cb1ec820-d81e-497d-bdaa-c7f302ae3bfa" name="get:\teamSeasons:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="1711ae5f-617f-491d-a64c-a15e1afe59bf" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getteamSeasonssalesforcedataapiconfigtest1::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\teamSeasons:salesforce-data-api-config-test2" doc:id="567b3a55-5610-47bc-985c-bd03ac1c48ab" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Query" doc:id="985c24a6-3637-4ea5-9f3c-9ed7b1b6d18c" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="1423aba4-cdf4-47d8-a1f7-f904ebc68665" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getteamSeasonssalesforcedataapiconfigtest2\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getteamSeasonssalesforcedataapiconfigtest2\mock_variable_.dwl')]" />
						<munit-tools:variable key="date" value="#[output application/java --- readUrl('classpath://getteamSeasonssalesforcedataapiconfigtest2\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://getteamSeasonssalesforcedataapiconfigtest2\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://getteamSeasonssalesforcedataapiconfigtest2\mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="e7984c0c-9df5-4969-b0f7-1134043e6728" >
				<munit:payload value="#[readUrl('classpath://getteamSeasonssalesforcedataapiconfigtest2\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getteamSeasonssalesforcedataapiconfigtest2\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getteamSeasonssalesforcedataapiconfigtest2\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\teamSeasons:salesforce-data-api-config" doc:id="34478566-4f3d-4cd9-b526-b8fbdaaadc06" name="get:\teamSeasons:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="d3278381-0578-4fd0-810c-b6f62d1b8cf5" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getteamSeasonssalesforcedataapiconfigtest2::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="post:\contacts:application\json:salesforce-data-api-config-test-no-matching-records" doc:id="3f886bce-92da-45e1-a9a9-a93b40fd9cef" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Create" doc:id="9ca8ce6d-ae4d-4ba0-b1b3-479ad52231e0" processor="salesforce:create">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="45632d40-a2a7-4304-930a-a2fa81d78f0d" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtest1/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtest1/mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtest1/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="originalPayload" value="#[output application/json --- readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtest1/mock_variable_2.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtest1/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="ContactRecordType" value="#[output application/java --- readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtest1/mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Check for matching Contacts" doc:id="99ec46fe-fa0c-4769-b48a-288007ef3e86" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="61c0f5f7-6cee-4580-a92a-2432384dba3c" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtest1/mock_payload1.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtest1/mock_variable_5.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtest1/mock_variable_6.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="originalPayload" value="#[output application/json --- readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtest1/mock_variable_7.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtest1/mock_variable_8.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="cdeca192-f40c-43c9-a081-4680e3eb91c9" >
				<munit:payload value="#[output application/json --- readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtest1/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtest1/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtest1/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\contacts:application\json:salesforce-data-api-config" doc:id="1f732272-c9b5-484b-8cfb-abed53184193" name="post:\contacts:application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="53706e5b-fdb5-47ba-acfc-223dadfb1e44" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postcontactsapplicationjsonsalesforcedataapiconfigtest1::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="post:\contacts:application\json:salesforce-data-api-config-test-matching-records-found" doc:id="b6f21dd1-5898-4e8e-a010-a2519b2114c9" expectedErrorType="CREATECONTACT:CONFLICT">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Check for matching Contacts" doc:id="c9bd06a6-e907-492a-8e46-c9106355c99e" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="61c0f5f7-6cee-4580-a92a-2432384dba3c" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtestmatchingrecordsfound/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtestmatchingrecordsfound/mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtestmatchingrecordsfound/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="originalPayload" value="#[output application/json --- readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtestmatchingrecordsfound/mock_variable_2.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtestmatchingrecordsfound/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="b8e47a6e-c818-4329-81d8-6b7b33fec869" >
				<munit:payload value="#[output application/json --- readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtestmatchingrecordsfound/set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json" />
				<munit:attributes value="#[readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtestmatchingrecordsfound/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://postcontactsapplicationjsonsalesforcedataapiconfigtestmatchingrecordsfound/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to post:\contacts:application\json:salesforce-data-api-config" doc:id="2ed134a5-60b7-400b-b0c7-f81c764f690b" name="post:\contacts:application\json:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="bbce1258-68c1-4152-96c8-e7c9522174e7" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postcontactsapplicationjsonsalesforcedataapiconfigtestmatchingrecordsfound::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\coach\(coachId)\all:salesforce-data-api-config-test" doc:id="ecd69503-d9e8-4ebf-a4b3-8d99fa642224" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Query" doc:id="3c474bcb-16f5-497a-bd85-6e55c1fa3866" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="30344094-f0f1-44d4-bdc9-9897cbc2a741" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getcoachcoachIdallsalesforcedataapiconfigtest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getcoachcoachIdallsalesforcedataapiconfigtest\mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://getcoachcoachIdallsalesforcedataapiconfigtest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://getcoachcoachIdallsalesforcedataapiconfigtest\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="coachId" value="#[output application/java --- readUrl('classpath://getcoachcoachIdallsalesforcedataapiconfigtest\mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="dde0e53b-500c-4c44-9164-6f3c3a2410d2" >
				<munit:payload value="#[readUrl('classpath://getcoachcoachIdallsalesforcedataapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getcoachcoachIdallsalesforcedataapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getcoachcoachIdallsalesforcedataapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\coach\(coachId)\all:salesforce-data-api-config" doc:id="a9c1537e-b5b5-4e96-82a8-838f283f63ee" name="get:\coach\(coachId)\all:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="0c20be82-0b88-48c6-af29-f03099e80c4e" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getcoachcoachIdallsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Store URI parameters" doc:id="00b268f9-840a-4ad4-b9ae-fc56298d5bae" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="6784dd16-d76e-4fa4-a526-ab370875d02b" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="cffa0b27-cb72-4b1e-8a40-536f3d22c181" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="2e4560c3-3fd9-4697-9927-098a4fdc0436" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\coach\(coachId)\teamseasons:salesforce-data-api-config-test" doc:id="c9ccbb38-f66e-4599-b8ed-aef86d6eaf20" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Query" doc:id="29a2c315-b0ea-4eaf-8596-d0a0308e07fd" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="c4a7d532-abc4-4dab-abe9-60d8bfaaa69c" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonssalesforcedataapiconfigtest\mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getcoachcoachIdteamseasonssalesforcedataapiconfigtest\mock_variable_.dwl')]" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonssalesforcedataapiconfigtest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonssalesforcedataapiconfigtest\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="coachId" value="#[output application/java --- readUrl('classpath://getcoachcoachIdteamseasonssalesforcedataapiconfigtest\mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="d935d3c0-ea38-427a-991e-8d6035573f2d" >
				<munit:payload value="#[readUrl('classpath://getcoachcoachIdteamseasonssalesforcedataapiconfigtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getcoachcoachIdteamseasonssalesforcedataapiconfigtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getcoachcoachIdteamseasonssalesforcedataapiconfigtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\coach\(coachId)\teamseasons:salesforce-data-api-config" doc:id="5eb73fd2-59bc-4e63-a025-fa0305b704e1" name="get:\coach\(coachId)\teamseasons:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="d19c6686-5156-4b5b-9cb3-126ef08c05c3" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getcoachcoachIdteamseasonssalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Store URI parameters" doc:id="df3a9e5e-4e7f-49fc-9b89-72d406acc281" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="ba85bd36-9eef-4b6a-8e4c-c013e46e8271" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:verify-call doc:name="Verify Create Response" doc:id="4a502e02-60a6-4e2f-9be0-1bdd597cb24d" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="ee51a2d1-3e3a-4fbb-aedb-6cf116319685" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="get:\contacts\search:salesforce-data-api-config-test" doc:id="389bf405-52d9-4ba7-ae1d-69a74cc3ba14" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Search" doc:id="4e42eebe-fd4c-4a51-86f7-b52a8267811f" processor="salesforce:search">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="f195a55e-9140-44b5-b60e-1809649ef0a3" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://getcontactssearchsalesforcedataapiconfigtest/mock_payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getcontactssearchsalesforcedataapiconfigtest/mock_variable_.dwl')]" />
						<munit-tools:variable key="searchString" value="#[output application/java --- readUrl('classpath://getcontactssearchsalesforcedataapiconfigtest/mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="method" value="#[output application/java --- readUrl('classpath://getcontactssearchsalesforcedataapiconfigtest/mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="requestPath" value="#[output application/java --- readUrl('classpath://getcontactssearchsalesforcedataapiconfigtest/mock_variable_3.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="fd92e867-97b8-4135-a719-a05903f6b055" >
				<munit:payload value="#[readUrl('classpath://getcontactssearchsalesforcedataapiconfigtest/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getcontactssearchsalesforcedataapiconfigtest/set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getcontactssearchsalesforcedataapiconfigtest/set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\contacts\search:salesforce-data-api-config" doc:id="e7a859fc-5b3e-4546-ad8d-d03c11ed715b" name="get:\contacts\search:salesforce-data-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="ca663f6a-e121-493f-b0c7-3216f53daf79" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getcontactssearchsalesforcedataapiconfigtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
