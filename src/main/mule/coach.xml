<?xml version="1.0" encoding="UTF-8"?>
<mule
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns:secure-properties="http://www.mulesoft.org/schema/mule/secure-properties"
	xmlns:slack="http://www.mulesoft.org/schema/mule/slack"
	xmlns:xml-module="http://www.mulesoft.org/schema/mule/xml-module"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd  http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/secure-properties http://www.mulesoft.org/schema/mule/secure-properties/current/mule-secure-properties.xsd http://www.mulesoft.org/schema/mule/xml-module http://www.mulesoft.org/schema/mule/xml-module/current/mule-xml-module.xsd http://www.mulesoft.org/schema/mule/slack http://www.mulesoft.org/schema/mule/slack/current/mule-slack.xsd
	http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">

	<flow
		name="get:\coach\(coachId)\teamseasons:salesforce-data-api-config">
		<logger
			level="INFO"
			doc:name="Log entry-flow"
			doc:id="db2b444c-d384-4b60-a94b-5a4cedc87b30"
			message="Method and Request Path stored as vars: method=#[vars.method], request path=#[vars.requestPath]. Also for this request we have queryParam: date=#[attributes.queryParams[0]]" />
		<ee:transform
			doc:name="Store URI parameters"
			doc:id="ba85bd36-9eef-4b6a-8e4c-c013e46e8271">
			<ee:variables>
				<ee:set-variable variableName="coachId"><![CDATA[attributes.uriParams.'coachId']]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<logger
			level="INFO"
			doc:name="Log Stored URI Params"
			doc:id="8027a799-c637-4b02-8cd4-2ca51dd5a969"
			message="URI Param - coachId: #[vars.coachId] - stored as var " />
		<salesforce:query
			doc:name="Query"
			doc:id="c4a7d532-abc4-4dab-abe9-60d8bfaaa69c"
			config-ref="Salesforce_Config">
			<salesforce:salesforce-query><![CDATA[
			SELECT 
				Anticipated_Players_Enrollment__c,
				Coach_Soccer__c,
				Coach_Writing__c,
				Season__r.Id,
				CreatedById,
				CreatedDate,
				Date_Last_Session_Attended__c,
				Id,IsDeleted,
				LastActivityDate,
				LastModifiedById,
				LastModifiedDate,
				LastReferencedDate,
				LastViewedDate,
				Name,
				Number_of_Attendance_Completed__c,
				Number_of_Attendance_Incomplete__c,
				Number_of_Students_Absent__c,
				Number_of_Students_Present__c,
				Number_of_Team_Seasons__c,
				Partnership__c,
				Percent_of_Attendance_Completed__c,
				Percent_of_Students_Present__c,
				Schedule__c,
				School_Site__c,
				SCORES_Program_Coordinator__r.Name,
				SCORES_Program_Manager__r.Name,
				Season_End_Date__c,
				Season_Start_Date__c,
				Season__c,
				SystemModstamp,
				Team__c,
				Total_Number_of_Players__c,
				Total_Number_of_Sessions__c,
				Coach_Soccer__r.Name,
				Coach_Writing__r.Name,
				Team__r.Name,
				Season__r.Name,
				Team__r.School_Site__r.Region__c,
				Team__r.SCORES_Program_Type__c,
				Team__r.Uses_Headcount__c
			FROM 
				Team_Season__c 
			WHERE (
					Coach_Soccer__c = ':coachId' 
				OR 	Coach_Writing__c = ':coachId' 
				OR SCORES_Program_Coordinator__c = ':coachId' 
				OR SCORES_Program_Manager__c = ':coachId'
				)  
				AND Season__r.Id = ':season' 
			ORDER BY 
				Season_End_Date__c DESC
				]]></salesforce:salesforce-query>
			<salesforce:parameters><![CDATA[#[output application/java
---
{
	season : attributes.queryParams.season,
	coachId : vars.coachId
}]]]></salesforce:parameters>
		</salesforce:query>
		<ee:transform
			xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd"
			doc:name="Create Response"
			doc:id="ee51a2d1-3e3a-4fbb-aedb-6cf116319685">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 ,
 indexOfPayload01 ) -> {
	SeasonStartDate: payload01.Season_Start_Date__c as String default "",
	TotalNoOfSessions: payload01.Total_Number_of_Sessions__c default 0,
	CoachWriting: payload01.Coach_Writing__r.Name default  "" as String,
	Partnership: payload01.Partnership__c default "",
	SeasonName: payload01.Season__r.Name default "" as String,
	TotalNoOfPlayers: payload01.Total_Number_of_Players__c default 0,
	TeamSeasonName: payload01.Name default "",
	CoachSoccer: payload01.Coach_Soccer__r.Name,
	TeamSeasonId: payload01.Id default "",
	TeamName: payload01.Team__r.Name default "" as String,
	SchoolSite: payload01.School_Site__c default "",
	SeasonEndDate: payload01.Season_End_Date__c as String default "",
	ScoresProgramManager: payload01.SCORES_Program_Manager__r.Name default  "" as String,
	ProgramCoordinator:  payload01.SCORES_Program_Coordinator__r.Name default  "" as String,
	Region: payload01.Team__r.School_Site__r.Region__c,
	SeasonId: payload01.Season__r.Id default "" as String,
	ProgramType: payload01.Team__r.SCORES_Program_Type__c,
	UsesHeadcount: payload01.Team__r.Uses_Headcount__c 
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger
			level="INFO"
			doc:name="Log Created Response"
			doc:id="7d4746f9-9dc9-4598-9bc2-4599b8e2b7be"
			message="#[payload]" />
	</flow>
	<flow
		name="get:\coach\(coachId)\teamseasons\(teamSeasonId)\sessions:salesforce-data-api-config">
		<logger
			level="INFO"
			doc:name="Log entry-flow"
			doc:id="55be03c4-09b5-4a1a-95ef-a24ed2008fbf"
			message="Method and Request Path stored as vars: method=#[vars.method], request path=#[vars.requestPath]. Also for this request we have queryParam: date=#[attributes.queryParams[0]]" />
		<ee:transform
			doc:name="Store URI parameters"
			doc:id="21103b85-d0a3-4a6c-949c-61d2eae5d2d2">
			<ee:variables>
				<ee:set-variable variableName="coachId"><![CDATA[attributes.uriParams.'coachId']]></ee:set-variable>
				<ee:set-variable variableName="teamSeasonId"><![CDATA[attributes.uriParams.'teamSeasonId']]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<set-variable value='#[%dw 2.0&#10;var startDateCond =    if (!isEmpty(attributes.queryParams.startDate)) &#10;        " AND Session_Date__c &gt;= " ++ (attributes.queryParams.startDate as Date)&#10;    else ""&#10;&#10;var endDateCond = &#10;    if (!isEmpty(attributes.queryParams.endDate)) &#10;        " AND Session_Date__c &lt;= " ++ (attributes.queryParams.endDate as Date)&#10;    else ""&#10;output text/plain&#10;---&#10;startDateCond ++ endDateCond]' doc:name='Set Variable "dateQuery"' doc:id="a615ab70-d45d-4622-8cb8-cfdf865b383e" variableName="dateQuery"/>
		<logger
			level="INFO"
			doc:name="Log Stored URI Params"
			doc:id="12fa02b2-d184-4129-8f1b-763187926e20"
			message="URI Param - coachId: #[vars.coachId] , teamseasonId: #[vars.teamSeasonId] - stored as vars" />
		<salesforce:query
			doc:name="Query"
			doc:id="e2c7a8f4-85c1-4108-be94-83f757bfde43"
			config-ref="Salesforce_Config">
			<salesforce:salesforce-query><![CDATA[
			SELECT 
				CreatedById,
				CreatedDate,
				Id,
				IsDeleted,
				LastActivityDate,
				LastModifiedById,
				LastModifiedDate,
				LastReferencedDate,
				LastViewedDate,
				Name,
				Number_of_Students_Absent__c,
				Number_of_Students_Present__c,
				Percent_of_Students_Present__c,
				Session_Date__c,
				Session_Topic__c,
				Session_Weekday__c,
				SystemModstamp,
				Team_Season__c,
				Session_Start__c,
				Session_End__c 
			FROM 
				Session__c 
			WHERE 
				Team_Season__c = ':teamseasonid' 
				AND (
						Team_Season__r.Coach_Soccer__c = ':coachid' 
					OR 	Team_Season__r.Coach_Writing__c = ':coachid' 
					OR Team_Season__r.SCORES_Program_Coordinator__c = ':coachid' 
					OR Team_Season__r.SCORES_Program_Manager__c = ':coachid'
					)
					:dateQuery
			]]></salesforce:salesforce-query>
			<salesforce:parameters><![CDATA[#[output application/java
---
{
	teamseasonid : vars.teamSeasonId,
	coachid : vars.coachId,
	dateQuery : vars.dateQuery
}]]]></salesforce:parameters>
		</salesforce:query>
		<ee:transform
			doc:name="Transform Message"
			doc:id="25ad8f74-7ff6-412b-b6d5-47a7c9a81a01">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	TeamSeasonId: vars.teamSeasonId,
	SessionId: payload01.Id default "",
	SessionName: payload01.Name default "",
	SessionDate: payload01.Session_Date__c as String default "",
	SessionStartTime: payload01.Session_Start__c as LocalTime as String default "",
	SessionEndTime: payload01.Session_End__c as LocalTime as String default "",
	SessionTopic: payload01.Session_Topic__c default ""
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger
			level="INFO"
			doc:name="Log Created Response"
			doc:id="19aaf94d-5c4a-4481-8d9d-59a24c6e950c"
			message="#[payload]" />
	</flow>
	<flow name="get:\coach\(coachId)\all:salesforce-data-api-config">
		<logger
			level="INFO"
			doc:name="Log entry-flow"
			doc:id="263e01d8-85d7-422a-b3fa-e4adf99f6ad5"
			message="Method and Request Path stored as vars: method=#[vars.method], request path=#[vars.requestPath]. Also for this request we have queryParam: date=#[attributes.queryParams[0]]" />
		<ee:transform
			doc:name="Store URI parameters"
			doc:id="6784dd16-d76e-4fa4-a526-ab370875d02b">
			<ee:variables>
				<ee:set-variable variableName="coachId"><![CDATA[attributes.uriParams.'coachId']]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<logger
			level="INFO"
			doc:name="Log Stored URI Params"
			doc:id="3d3be5d0-aed9-491c-94ae-1172c08100e3"
			message="URI Param - coachId: #[vars.coachId] - stored as vars" />
		<choice
			doc:name="Choice"
			doc:id="3100b787-33bf-47c4-9eca-fd13cbb727db">
			<when expression="#[attributes.queryParams.secondDate != null]">
				<salesforce:query
					doc:name="Query with ranges"
					doc:id="f121388e-f35a-4eef-87be-f5bfdcd91479"
					config-ref="Salesforce_Config">
					<salesforce:salesforce-query><![CDATA[
					SELECT 
						Id,
						Name,
						Team__r.Name,
						Season__r.Name,
						Total_Number_of_Players__c,
						Team__r.School_Site__r.Region__c,
						Team__r.SCORES_Program_Type__c,
						Team__r.Uses_Headcount__c,
						(
							SELECT 
								Id,
						 		Name,
						 		Session_Topic__c,
						 		Session_Date__c,
						 		Session_Start__c,
								Session_End__c,
						 		Number_of_Students_Present__c
						 	From 
						 		Sessions__r 
						 	WHERE 
						 		Session_Date__c >= :startDate 
						 	AND Session_Date__c <= :endDate 
						 	ORDER BY 
						 		Session_Date__c DESC
						 )
					FROM 
						Team_Season__c 
					WHERE (
						Coach_Soccer__c = ':coachid' 
						OR Coach_Writing__c = ':coachid' 
						OR SCORES_Program_Coordinator__c = ':coachid' 
						OR SCORES_Program_Manager__c = ':coachid'
						) 
						AND (
							Season_Start_Date__c <= :endDate 
							AND Season_End_Date__c >= :startDate
							)
					]]></salesforce:salesforce-query>
					<salesforce:parameters><![CDATA[#[output application/java
---
{
	offset : attributes.queryParams.offset,
	endDate : attributes.queryParams.secondDate,
	limit : attributes.queryParams.limit,
	coachid : vars.coachId,
	startDate : attributes.queryParams.firstDate
}]]]></salesforce:parameters>
				</salesforce:query>
			</when>
			<otherwise>
				<salesforce:query
					doc:name="Query"
					doc:id="30344094-f0f1-44d4-bdc9-9897cbc2a741"
					config-ref="Salesforce_Config">
					<salesforce:salesforce-query><![CDATA[
					SELECT
						Id,
						Name,
						Team__r.Name,
						Season__r.Name,
						Season_End_Date__c,
						Total_Number_of_Players__c,
						Team__r.School_Site__r.Region__c,
						Team__r.SCORES_Program_Type__c,
						Team__r.Uses_Headcount__c,
						(
							SELECT 
								Id,
								 Name,
								 Session_Topic__c,
								 Session_Date__c,
								 Session_Start__c,
								 Session_End__c,
								 Number_of_Students_Present__c 
							FROM 
								Sessions__r 
							WHERE 
								Session_Date__c = :date 
							ORDER BY 
								Session_Date__c DESC
						)
					FROM 
						Team_Season__c 
					WHERE 
					(
						   Coach_Soccer__c = ':coachid' 
						OR Coach_Writing__c = ':coachid' 
						OR SCORES_Program_Coordinator__c = ':coachid' 
						OR SCORES_Program_Manager__c = ':coachid'
					) 
					AND 
					(
						Season_Start_Date__c <= :date 
						AND Season_End_Date__c >= :date
					) 
					ORDER BY 
						Season_End_Date__c DESC
					]]></salesforce:salesforce-query>
					<salesforce:parameters><![CDATA[#[output application/java
---
{
	date : attributes.queryParams.firstDate,
	coachid : vars.coachId
}]]]></salesforce:parameters>
				</salesforce:query>
			</otherwise>
		</choice>
		<ee:transform
			xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd"
			doc:id="2e4560c3-3fd9-4697-9927-098a4fdc0436">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	Enrollments: payload01.Enrollments__r map ( enrollmentsr , indexOfEnrollmentsr ) -> {
		EnrollmentId: enrollmentsr.Id,
		StudentName: enrollmentsr.Contact__r.Name,
		FirstName: enrollmentsr.Contact__r.FirstName,
		LastName: enrollmentsr.Contact__r.LastName,
		Birthdate: enrollmentsr.Contact__r.Birthdate default "",
		Gender: enrollmentsr.Contact__r.Gender__c default "",
		Ethnicity: enrollmentsr.Contact__r.Ethnicity__c default "",
		ZipCode: enrollmentsr.Contact__r.Zip_First_Five_Digits__c default "",
		StudentId: enrollmentsr.Contact__c
	},
	Sessions: payload01.Sessions__r map ( sessionsr , indexOfSessionsr ) -> {
		TeamSeasonId: payload01.Id,
		SessionId: sessionsr.Id,
		SessionName: sessionsr.Name,
		SessionDate: sessionsr.Session_Date__c as String,
		SessionStartTime: payload01.Session_Start__c as LocalTime as String default "",
		SessionEndTime: payload01.Session_End__c as LocalTime as String default "",
		SessionTopic: sessionsr.Session_Topic__c,
		TotalStudentsPresent: sessionsr.Number_of_Students_Present__c
	},
	CoachSoccer: vars.coachId,
	CoachWriting: vars.coachId,
	TotalNoOfPlayers: payload01.Total_Number_of_Players__c default 0 as Number,
	TeamSeasonName: payload01.Name default "",
	TeamSeasonId: payload01.Id default "",
	Team_Name: payload01.Team__r.Name default "",
	Season_Name: payload01.Season__r.Name default "",
	Region: payload01.Team__r.School_Site__r.Region__c,
	ProgramType: payload01.Team__r.SCORES_Program_Type__c,
	UseHeadcount: payload01.Team__r.Uses_Headcount__c

}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger
			level="INFO"
			doc:name="Log Created Response"
			doc:id="22b14f46-310f-4768-ab87-5128e5f11c61"
			message="#[payload]" />
	</flow>
	<flow
		name="get:\coach\(coachId)\teamseasons\(teamSeasonId)\enrollments:salesforce-data-api-config">
		<logger
			level="INFO"
			doc:name="Log entry-flow"
			doc:id="5f5fe59f-a13b-4ef1-9c1c-2772b5c7643c"
			message="Method and Request Path stored as vars: method=#[vars.method], request path=#[vars.requestPath]." />
		<set-variable value="#[%dw 2.0&#10;import * from dw::util::Coercions&#10;---&#10;toBoolean(attributes.queryParams.onlyLatest) default false]" doc:name='Set Variable "LatestEnrollmentsOnly"' doc:id="665fb71b-3eaa-4f71-a958-7915c1dc8581" variableName="LatestEnrollmentsOnly" />
		<ee:transform
			doc:name="Store URI parameters"
			doc:id="6ad6fba9-9cc0-4bc5-9582-39a1a552e4d3">
			<ee:variables>
				<ee:set-variable variableName="coachId"><![CDATA[attributes.uriParams.'coachId']]></ee:set-variable>
				<ee:set-variable variableName="teamSeasonId"><![CDATA[attributes.uriParams.'teamSeasonId']]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<logger
			level="INFO"
			doc:name="Log Stored URI Params"
			doc:id="5a22dfa1-fcbc-4f88-ad3a-107abbcaac12"
			message="URI Param - coachId: #[vars.coachId], teamseasonId: #[vars.teamSeasonId] - storfed as vars" />
		<salesforce:query doc:name="Query" doc:id="2938911f-53b8-43a5-a53e-14fca711003d" config-ref="Salesforce_Config">
			<salesforce:salesforce-query><![CDATA[
			SELECT 
				Contact__r.Name,
				Contact__r.FirstName,
				Contact__r.LastName,
				Contact__r.Allergies__c,
				Contact__r.Parent_First_Name__c,
				Contact__r.Parent_Last_Name__c,
				Contact__r.Parent_Email_Address__c,
				Contact__r.Parent_Phone_01__c,
				Contact__r.Parent_Phone_02__c,
				Contact__r.Parent_Phone_03__c,
				Contact__r.Emergency_Contact_Name__c,
				Contact__r.Emergency_Contact_Relationship_to_Child__c,
				Contact__r.Emergency_Contact_Name_Phone_01__c,
				Contact__r.Emergency_Contact_Name_Phone_02__c,
				Contact__r.Emergency_Contact_Name_Phone_03__c,
				Contact__r.Second_Emergency_Contact_Name__c,
				Contact__r.Second_Emerg_Contact_Relationship_Child__c,
				Contact__r.Second_Emergency_Phone_01__c,
				Contact__r.Second_Emergency_Phone_02__c,
				Contact__r.Second_Emergency_Phone_03__c,
				Contact__r.npsp__Current_Address__c,
				Contact__r.npe01__Home_Address__c,
				Contact__r.Birthdate,
				Contact__r.Gender__c,
				Contact__r.Ethnicity__c,
				Contact__r.Zip_First_Five_Digits__c,
				Contact__r.Student_Record_Complete__c,
				Contact__c,
				CreatedById,
				CreatedDate,
				End_Date__c,
				Id,
				IsDeleted,
				LastModifiedById,
				LastModifiedDate,
				LastReferencedDate,
				LastViewedDate,
				Name,
				Number_of_Enrollments__c,
				Start_Date__c,
				SystemModstamp,
				Team_Season__c,
				Dropped__c,
				Drop_Reason__c,
				Other_Drop_Reason_If_Selected__c
			FROM 
				Enrollment__c 
			WHERE 
				Team_Season__c = ':teamseasonid' 
			AND 
			(
				Team_Season__r.Coach_Soccer__c = ':coachid' 
				OR Team_Season__r.Coach_Writing__c = ':coachid' 
				OR Team_Season__r.SCORES_Program_Coordinator__c = ':coachid' 
				OR Team_Season__r.SCORES_Program_Manager__c = ':coachid'
			)
]]></salesforce:salesforce-query>
			<salesforce:parameters><![CDATA[#[output application/java
---
{
	teamseasonid : vars.teamSeasonId,
	coachid : vars.coachId
}]]]></salesforce:parameters>
		</salesforce:query>
		<ee:transform xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" doc:id="f83b6a71-b77b-42de-871b-11e4a3508eb1">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	EnrollmentId: payload01.Id default "",
	EnrollmentName: payload01.Name default "",
	StartDate: payload01.Start_Date__c default "",
	EndDate: payload01.End_Date__c default "",
	StudentId: payload01.Contact__c default "",
	StudentName: payload01.Contact__r.Name default "",
	FirstName: payload01.Contact__r.FirstName,
	LastName: payload01.Contact__r.LastName,
	LastModifiedDate: payload01.LastModifiedDate,
	Birthdate: payload01.Contact__r.Birthdate default "",
	Gender: payload01.Contact__r.Gender__c default "",
	Ethnicity: payload01.Contact__r.Ethnicity__c default "",
	ZipCode: payload01.Contact__r.Zip_First_Five_Digits__c default "",
	Allergies: payload01.Contact__r.Allergies__c default "",
	CurrentAddress: payload01.Contact__r.npsp__Current_Address__c default "", 
	HomeAddress: payload01.Contact__r.npe01__Home_Address__c default "",
	StudentRecordComplete: (payload01.Contact__r.Student_Record_Complete__c as String) as Boolean default false,
	Dropped: payload01.Dropped__c as Boolean default false,
	DropReason: payload01.Drop_Reason__c default "",
	OtherDropReason: payload01.Other_Drop_Reason_If_Selected__c default "",
	ParentInfo: {
		FirstName: payload01.Contact__r.Parent_First_Name__c default "",
		LastName: payload01.Contact__r.Parent_Last_Name__c default "",
		Email: payload01.Contact__r.Parent_Email_Address__c default "",
		FirstPhone: payload01.Contact__r.Parent_Phone_01__c default "",
		SecondPhone: payload01.Contact__r.Parent_Phone_02__c default "",
		ThirdPhone: payload01.Contact__r.Parent_Phone_03__c default "",
	},
	EmergencyContactInfo: { 
		Name: payload01.Contact__r.Emergency_Contact_Name__c default "", 
		RelationshipToChild: payload01.Contact__r.Emergency_Contact_Relationship_to_Child__c default "", 
		FirstPhone: payload01.Contact__r.Emergency_Contact_Name_Phone_01__c default "", 
		SecondPhone: payload01.Contact__r.Emergency_Contact_Name_Phone_02__c default "", 
		ThirdPhone: payload01.Contact__r.Emergency_Contact_Name_Phone_03__c default "",
	}, 
	SecondEmergencyContactInfo: {
		Name: payload01.Contact__r.Second_Emergency_Contact_Name__c default "", 
		RelationshipToChild: payload01.Contact__r.Second_Emerg_Contact_Relationship_Child__c default "", 
		FirstPhone: payload01.Contact__r.Second_Emergency_Phone_01__c default "", 
		SecondPhone: payload01.Contact__r.Second_Emergency_Phone_02__c default "", 
		ThirdPhone: payload01.Contact__r.Second_Emergency_Phone_03__c default "",
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<choice doc:name="Choice" doc:id="b9f967ce-6a5c-49e2-9dc1-134478f1d4d6" >
			<when expression="#[vars.LatestEnrollmentsOnly]">
				<ee:transform doc:name="Transform Message" doc:id="3ffc63ad-9fa7-4f37-a4f9-5c7208731143" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
valuesOf(
    payload
    groupBy ((item) -> item.StudentId)
    mapObject (valueArray, key) -> 
    {
        (key): valueArray reduce ((item, acc) -> 
        if (item.LastModifiedDate as DateTime > acc.LastModifiedDate as DateTime) 
            item 
        else 
            acc
        )
    })
    ]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
		</choice>
		<logger
			level="INFO"
			doc:name="Log Created Response"
			doc:id="6d1746e6-35ac-4064-9cb3-03e2d2aa2dad"
			message="#[payload]" />
	</flow>
	<flow
		name="post:\coach\(coachId)\teamseasons\(teamSeasonId)\sessions\(sessionId)\attendances:application\json:salesforce-data-api-config">
		<logger
			level="INFO"
			doc:name="Log entry-flow"
			doc:id="c341f736-e33b-41d9-9587-79be5aded28f"
			message="Method and Request Path stored as vars: method=#[vars.method], request path=#[vars.requestPath]." />
		<ee:transform
			doc:name="Store URI parameters"
			doc:id="f711ee79-c3c7-4cdb-af46-28723e067b8f">
			<ee:variables>
				<ee:set-variable variableName="coachId"><![CDATA[attributes.uriParams.'coachId']]></ee:set-variable>
				<ee:set-variable variableName="teamSeasonId"><![CDATA[attributes.uriParams.'teamSeasonId']]></ee:set-variable>
				<ee:set-variable variableName="sessionId"><![CDATA[attributes.uriParams.'sessionId']]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<logger
			level="INFO"
			doc:name="Log Stored URI Params"
			doc:id="89586974-34cf-4491-9ece-93f323634c60"
			message="URI Param - coachId: #[vars.coachId], teamseasonId: #[vars.teamSeasonId], sessionId: #[vars.sessionId] - stored as vars" />
		<set-variable value="#[attributes.queryParams.disableChecks]" doc:name="Set disableChecks" doc:id="9fa37561-e2d6-48d9-91bc-722aeb1d16b0" variableName="disableChecks"/>
		<choice doc:name="Choice" doc:id="765f0860-ca3b-4eb2-874b-3e3fa345bdbb">
			<when expression="#[vars.disableChecks]">
				<logger level="INFO" doc:name="Logger" doc:id="8606ac75-207f-485a-9264-eea2e791e8af" message="Checks are disabled..." />
			</when>
			<otherwise>
				<set-variable value="#[payload]" doc:name="Set Request Payload" doc:id="8cbe1849-f7cb-45eb-aca2-1347bc39d156" variableName="RequestPayload" />
				<set-variable value="#[%dw 2.0&#10;var ids = payload map ((item) -&gt; item.StudentId)&#10;output text/plain&#10;---&#10;&quot;('&quot; ++ (distinctBy(ids, (id) -&gt; id) joinBy &quot;', '&quot;) ++ &quot;')&quot;]" doc:name="Set Ids From Payload" doc:id="bfa06495-d28e-4f7c-aea8-54c48edb3117" variableName="IdsFromPayload" />
				<salesforce:query doc:name="Get Session Details (Session Date)" doc:id="937a4b29-51ae-4f14-b24e-e3f960061f40" config-ref="Salesforce_Config">
					<salesforce:salesforce-query><![CDATA[SELECT Id, Session_Date__c FROM Session__c WHERE Id = ':sessionId']]></salesforce:salesforce-query>
					<salesforce:parameters><![CDATA[#[output application/java
---
{
	sessionId : vars.sessionId
}]]]></salesforce:parameters>
				</salesforce:query>
				<set-variable value="#[payload[0].Session_Date__c]" doc:name="Set Session Date" doc:id="0d2a6581-23f7-4a8f-bfa5-8582bf93dd17" variableName="SessionDate" />
				<salesforce:query doc:name="Retrieve Enrollment Records" doc:id="c9a213fc-b4a7-445f-9a8b-f1f9116eb4ab" config-ref="Salesforce_Config">
					<salesforce:salesforce-query><![CDATA[SELECT Start_Date__c, End_Date__c, Team_Season__c, Contact__c 
FROM Enrollment__c
WHERE Team_Season__c = ':teamSeasonId'
AND Contact__c IN :contactIds
AND Start_Date__c <= :sessionDate
AND End_Date__c >= :sessionDate]]></salesforce:salesforce-query>
					<salesforce:parameters><![CDATA[#[output application/java
---
{
	teamSeasonId : vars.teamSeasonId,
	contactIds: vars.IdsFromPayload,
	sessionDate: vars.SessionDate,
}]]]></salesforce:parameters>
				</salesforce:query>
				<set-variable value="#[payload]" doc:name="Set Enrollments Payload" doc:id="023760b2-934d-434c-8b87-6e4ab33855c3" variableName="EnrollmentsPayload" />
				<ee:transform doc:name="Transform Message" doc:id="11c130be-a1f5-459f-b81c-ba3fecceb386">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
import distinctBy from dw::core::Arrays
var validContactIds = (vars.EnrollmentsPayload map (e) -> e.Contact__c) distinctBy (id) -> id
---
vars.RequestPayload filter((item, index) -> (validContactIds contains (item.StudentId as String)))]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="#[payload]" doc:name="Set Filtered Payload" doc:id="ee6a9883-a5be-4ec3-807f-8fabb9185059" variableName="FilteredPayload" />
			</otherwise>
		</choice>
		<set-variable value="#[attributes.queryParams.disableChecks default false]" doc:name="Set disableChecks" doc:id="fb8cd8c7-ea9c-4bf9-8be1-d08ae77d43fa" variableName="disableChecks" />
		<salesforce:upsert
			doc:name="Upsert"
			doc:id="96226f7b-9c73-4b6c-80d2-bce874e4cfb2"
			config-ref="Salesforce_Config"
			objectType="Attendance__c"
			externalIdFieldName="ExternalId__c">
			<salesforce:records><![CDATA[#[%dw 2.0
output application/java
---
payload map ( payload01 , indexOfPayload01 ) -> {
	Contact__c: payload01.StudentId,
	Session__c: vars.sessionId,
	Attended__c: payload01.Attended,
	ExternalId__c: payload01.StudentId ++ '-' ++ vars.sessionId
}]]]></salesforce:records>
		</salesforce:upsert>
		<choice doc:name="Upsert successful?" doc:id="ec201558-e363-41ba-90be-362ae01fbc41">
			<when expression="#[payload.successful == false]">
				<set-variable value="#['SALESFORCE_ATTENDANCE_CREATE:' ++ (payload.items[0].statusCode default 'UNKNOWN')]" doc:name="Set Custom Error Type" doc:id="fcf6ce12-9747-44d5-a210-1bdf9a8e87c7" variableName="errorCustomType" />
				<set-variable value='#[%dw 2.0&#10;output text/plain&#10;---&#10;(payload.items[0].message default "Error While Creating Attendances.") ++ &#10;(&#10;  payload.items map ((payload01, indexOfPayload01) -&gt; &#10;    " Message: " ++ write(payload01.payload default "", "application/json")&#10;  ) joinBy ""&#10;)]' doc:name="Set Custom Error Message" doc:id="d63cc331-c4c7-42ca-86b3-97f9ab84820f" variableName="errorCustomMessage" />
				<raise-error doc:name="Raise error" doc:id="0186bc58-0909-4a09-a760-10b16852fbec" type="CUSTOM:CUSTOM_ERROR" description="Something went wrong while updating an attendance record." />
			</when>
		</choice>
		<ee:transform doc:name="Transform Message1" doc:id="66f13bec-bf90-42e7-9407-0b93bbd3e132" xsi:schemaLocation=" http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd  http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	Message: "Attendances taken",
	Attendance_Taken: payload.successful,
	FilteredPayload: vars.FilteredPayload default "Checks are disabled."
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Log Upsert" doc:id="3e70143c-8c88-4080-95ad-7efe4bd82a1e" message="#[output application/json  --- payload.items map ( payload01 , indexOfPayload01 ) -&gt; {  Message: payload01.payload default &quot;&quot; }]" />
	</flow>
	<flow
		name="get:\coach\(coachId)\teamseasons\(teamSeasonId)\sessions\(sessionId)\attendances:salesforce-data-api-config">
		<logger
			level="INFO"
			doc:name="Log entry-flow"
			doc:id="3ea68664-17b8-4854-8e58-7f6d03285b44"
			message="Method and Request Path stored as vars: method=#[vars.method], request path=#[vars.requestPath]." />
		<ee:transform
			doc:name="Store URI parameters"
			doc:id="86784c2c-83e8-4a5e-ae64-c5093cbacdbe">
			<ee:variables>
				<ee:set-variable variableName="coachId"><![CDATA[attributes.uriParams.'coachId']]></ee:set-variable>
				<ee:set-variable variableName="teamSeasonId"><![CDATA[attributes.uriParams.'teamSeasonId']]></ee:set-variable>
				<ee:set-variable variableName="sessionId"><![CDATA[attributes.uriParams.'sessionId']]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<logger
			level="INFO"
			doc:name="Log Stored URI Params"
			doc:id="f5fb5455-22c7-4d1f-b316-fa26806f3f1b"
			message="URI Param - coachId: #[vars.coachId], teamseasonId: #[vars.teamSeasonId], sessionId: #[vars.sessionId] - stored as vars" />
		<salesforce:query doc:name="Query to get SessionDate from sessionId" doc:id="1ba5db69-b60e-4902-aee9-aad169f60f32" config-ref="Salesforce_Config">
			<salesforce:salesforce-query><![CDATA[
				SELECT 
					Id,
					Session_Date__c
				FROM 
					Session__c
				WHERE 
					id = ':sessionId' 
				LIMIT 1
			]]></salesforce:salesforce-query>
			<salesforce:parameters><![CDATA[#[output application/java
				---
				{
						sessionId : vars.sessionId
				}]]]></salesforce:parameters>
		</salesforce:query>
		<set-variable value="#[payload[0].Session_Date__c]" doc:name="Set sessionDate" doc:id="363e64d3-c8d5-421d-b28f-c04f9262b79d" variableName="sessionDate" />
		<choice doc:name="Choice" doc:id="6d8e6d25-2088-410e-828e-51b13da45dd2" doc:description="TO_DELETE: Delete once all sessions have dates.">
			<when expression="#[isEmpty(vars.sessionDate)]">
				<set-variable value="#['SALESFORCE_TASK_CREATE:BAD_REQUEST']" doc:name="Set Custom Error Type" doc:id="52e68134-0915-494b-b10b-9d832344936f" variableName="errorCustomType" />
				<set-variable value="The given session doesn't have a date or does not exist. Cannot proceed with creating a task and attendance records." doc:name="Set Custom Error Message" doc:id="151cdac2-c9a1-4387-95da-8ec9bee0e995" variableName="errorCustomMessage" />
				<raise-error doc:name="Raise error" doc:id="e64e98e4-8893-4b7b-be3b-f03f5d774cef" type="CUSTOM:CUSTOM_ERROR" description="Something went wrong while creating a task record." />
			</when>
		</choice>
		<flow-ref doc:name="Call `createAttendancesForSessionBasedOnTeamSeasonId`" doc:id="d2c9a729-d4e7-454a-9891-0b02770a9749" name="createAttendancesForSessionBasedOnTeamSeasonId" />
		<logger
			level="INFO"
			doc:name="Log Created Response"
			doc:id="30a1023d-5242-40d6-9a42-a3f0668043c7"
			message="#[payload]" />
	</flow>
	<flow
		name="get:\coach\(coachId)\teamseasonsNotOwnedByCoach:salesforce-data-api-config">
		<logger
			level="INFO"
			doc:name="Log entry-flow"
			doc:id="edb65e58-9ab1-4ce3-840f-e95990ae5961"
			message="Method and Request Path stored as vars: method=#[vars.method], request path=#[vars.requestPath]. Also for this request we have queryParams: date=#[attributes.queryParams[0]]" />
		<ee:transform
			doc:name="Store Parameters"
			doc:id="0370b773-5268-4c82-b21b-fff6de1b3fe6">
			<ee:message />
			<ee:variables>
				<ee:set-variable variableName="coachId"><![CDATA[attributes.uriParams.'coachId']]></ee:set-variable>
				<ee:set-variable variableName="teamSeasonId"><![CDATA[attributes.uriParams.'teamSeasonId']]></ee:set-variable>
				<ee:set-variable variableName="region"><![CDATA[attributes.queryParams.'region']]></ee:set-variable>
				<ee:set-variable variableName="season"><![CDATA[attributes.queryParams.'season']]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<logger
			level="INFO"
			doc:name="Log Stored Params"
			doc:id="436b78d3-4d20-4a5a-8dc0-1a0a2be43a1b"
			message="URI Param - coachId: #[vars.coachId] - stored as var and URI Param - teamSeasonID: #[vars.teamSeasonID] - stored as var" />
		<salesforce:query
			doc:name="Query"
			doc:id="cf0e3b35-eb45-4493-b40a-ab9cd3f99273"
			config-ref="Salesforce_Config">
			<salesforce:salesforce-query><![CDATA[
			SELECT 
				Anticipated_Players_Enrollment__c,
				Coach_Soccer__c,
				Coach_Writing__c,
				CreatedById,
				CreatedDate,
				Date_Last_Session_Attended__c,
				Id,
				IsDeleted,
				LastActivityDate,
				LastModifiedById,
				LastModifiedDate,
				LastReferencedDate,
				LastViewedDate,
				Name,
				Number_of_Attendance_Completed__c,
				Number_of_Attendance_Incomplete__c,
				Number_of_Students_Absent__c,
				Number_of_Students_Present__c,
				Number_of_Team_Seasons__c,
				Partnership__c,
				Percent_of_Attendance_Completed__c,
				Percent_of_Students_Present__c,
				Schedule__c,
				School_Site__c,
				SCORES_Program_Coordinator__c,
				SCORES_Program_Manager__c,
				Season_End_Date__c,
				Season_Start_Date__c,
				Season__c,
				SystemModstamp,
				Team__c,
				Total_Number_of_Players__c,
				Total_Number_of_Sessions__c,
				Coach_Soccer__r.Name,
				Coach_Writing__r.Name,
				SCORES_Program_Coordinator__r.Name,
				SCORES_Program_Manager__r.Name,
				Team__r.Name,
				Season__r.Name 
			FROM 
				Team_Season__c 
			WHERE 
			(
				Coach_Soccer__c != ':coachId' 
				OR Coach_Writing__c != ':coachId' 
				OR SCORES_Program_Coordinator__c != ':coachId' 
				OR SCORES_Program_Manager__c != ':coachId'
			) 
			AND 
			(
				Team__r.School_Site__r.Region__c = ':region'
			) 
			AND 
			(
			Season__c = ':season'
			)
			]]></salesforce:salesforce-query>
			<salesforce:parameters><![CDATA[#[output application/java
---
{
	season : vars.season,
	region : vars.region,
	coachId : vars.coachId
}]]]></salesforce:parameters>
		</salesforce:query>
		<ee:transform
			doc:name="Create Response"
			doc:id="9fa45ae2-07a4-4857-af7c-7487c2fe453c"
			xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	SeasonStartDate: payload01.Season_Start_Date__c as String default "",
	TotalNoOfSessions: payload01.Total_Number_of_Sessions__c default 0,
	CoachWriting: payload01.Coach_Writing__r.Name default "" as String,
	Partnership: payload01.Partnership__c default "",
	SeasonName: payload01.Season__r.Name default "" as String,
	TotalNoOfPlayers: payload01.Total_Number_of_Players__c default 0,
	TeamSeasonName: payload01.Name default "",
	CoachSoccer: payload01.Coach_Soccer__r.Name default "" as String,
	TeamSeasonId: payload01.Id default "",
	TeamName: payload01.Team__r.Name default "" as String,
	SchoolSite: payload01.School_Site__c default "",
	SeasonEndDate: payload01.Season_End_Date__c as String default "",
	ProgramCoordinator:  payload01.SCORES_Program_Coordinator__r.Name default "" as String,
	ScoreProgramManager: payload01.SCORES_Program_Manager__r.Name default "" as String
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger
			level="INFO"
			doc:name="Log Created Response"
			doc:id="d8ecc282-d9e5-4701-9daa-79d507b4401e"
			message="#[payload]" />
	</flow>
	<flow
		name="get:\coach\(coachId)\allSessions:salesforce-data-api-config">
		<logger
			level="INFO"
			doc:name="Log entry-flow"
			doc:id="e1d2563f-f104-4588-a866-02b90652713a"
			message="Method and Request Path stored as vars: method=#[vars.method], request path=#[vars.requestPath]." />
		<ee:transform
			doc:name="Store Parameters"
			doc:id="8937277f-3d93-41bc-abc0-6da3720899a5">
			<ee:message />
			<ee:variables>
				<ee:set-variable variableName="coachId"><![CDATA[attributes.uriParams.'coachId']]></ee:set-variable>
				<ee:set-variable variableName="regions" ><![CDATA[attributes.queryParams.regions]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="Choice" doc:id="64954967-58fa-4695-b812-6d707edcf0d2" >
			<when expression="#[attributes.queryParams.endDate != null]">
				<choice doc:name="Choice" doc:id="cf77025e-c568-4c70-9d1d-00a3e1788b6d" >
					<when expression="#[attributes.queryParams.teamseasonId != null]">
						<salesforce:query doc:name="Query" doc:id="fc538db1-ecb3-4e50-b07e-6e831fdfa28d" config-ref="Salesforce_Config">
					<salesforce:salesforce-query><![CDATA[			SELECT 
				Id,
				IsDeleted,
				Name,
				Number_of_Students_Absent__c,
				Number_of_Students_Present__c,
				Percent_of_Students_Present__c,
				Session_Date__c,
				Session_Start__c,
				Session_End__c,
				Session_Topic__c,
				Team_Season__c,
				Team_Season__r.Name,
				Team_Season__r.Team__r.Name,
				Team_Season__r.Season__r.Name,
				Team_Season__r.Team__r.School_Site__r.Region__c,
				Team_Season__r.Team__r.SCORES_Program_Type__c,
				Team_Season__r.Team__r.Uses_Headcount__c,
				Session_Weekday__c 
			FROM 
				Session__c 
			WHERE 
			(
				Team_Season__r.Coach_Writing__c = ':coachid' 
				OR Team_Season__r.Coach_Soccer__c = ':coachid' 
				OR Team_Season__r.SCORES_Program_Coordinator__c = ':coachid' 
				OR Team_Season__r.SCORES_Program_Manager__c = ':coachid'
			) 
			AND 
			(
			Session_Date__c >= :firstDate
			) 
			AND 
			(
			Session_Date__c <= :secondDate
			) 
			AND 
			(
			Team_Season__r.Team__r.School_Site__r.Region__c IN (:region)
			) 
			AND 
			(
			Team_Season__r.Id = ':teamseasonId'
			) 
			LIMIT :limit
					OFFSET :offset]]></salesforce:salesforce-query>
					<salesforce:parameters><![CDATA[#[output application/java
---
{
	teamseasonId : attributes.queryParams.teamseasonId,
	offset : attributes.queryParams.offset,
	firstDate : attributes.queryParams.startDate,
	limit : attributes.queryParams.limit,
	region : vars.regions,
	coachid : vars.coachId,
	secondDate : attributes.queryParams.endDate
}]]]></salesforce:parameters>
				</salesforce:query>
					</when>
					<otherwise>
						<salesforce:query doc:name="Query" doc:id="b6be748e-bb55-4053-9987-e45c3232e911" config-ref="Salesforce_Config" >
							<salesforce:salesforce-query ><![CDATA[			SELECT 
				Id,
				IsDeleted,
				Name,
				Number_of_Students_Absent__c,
				Number_of_Students_Present__c,
				Percent_of_Students_Present__c,
				Session_Date__c,
				Session_Start__c,
				Session_End__c,
				Session_Topic__c,
				Team_Season__c,
				Team_Season__r.Name,
				Team_Season__r.Team__r.Name,
				Team_Season__r.Season__r.Name,
				Team_Season__r.Team__r.School_Site__r.Region__c,
				Team_Season__r.Team__r.SCORES_Program_Type__c,
				Team_Season__r.Team__r.Uses_Headcount__c,
				Session_Weekday__c 
			FROM 
				Session__c 
			WHERE 
			(
				Team_Season__r.Coach_Writing__c = ':coachid' 
				OR Team_Season__r.Coach_Soccer__c = ':coachid' 
				OR Team_Season__r.SCORES_Program_Coordinator__c = ':coachid' 
				OR Team_Season__r.SCORES_Program_Manager__c = ':coachid'
			) 
			AND 
			(
			Session_Date__c >= :firstDate
			) 
			AND 
			(
			Session_Date__c <= :secondDate
			) 
			AND 
			(
			Team_Season__r.Team__r.School_Site__r.Region__c IN (:region)
			) 
			LIMIT :limit
					OFFSET :offset]]></salesforce:salesforce-query>
							<salesforce:parameters ><![CDATA[#[output application/java
---
{
	offset : attributes.queryParams.offset,
	firstDate : attributes.queryParams.startDate,
	limit : attributes.queryParams.limit,
	region : vars.regions,
	coachid : vars.coachId,
	secondDate : attributes.queryParams.endDate
}]]]></salesforce:parameters>
						</salesforce:query>
					</otherwise>
				</choice>
			</when>
			<otherwise >
				<choice doc:name="Choice" doc:id="b8b66863-0721-49ab-a2fb-e45d85dcf4e4" >
					<when expression="#[attributes.queryParams.teamseasonId != null]">
						<salesforce:query doc:name="Query" doc:id="24aaebf4-25af-45bd-9b18-f9672f23598c" config-ref="Salesforce_Config">
			<salesforce:salesforce-query><![CDATA[			SELECT 
				Id,
				IsDeleted,
				Name,
				Number_of_Students_Absent__c,
				Number_of_Students_Present__c,
				Percent_of_Students_Present__c,
				Session_Date__c,
				Session_Start__c,
				Session_End__c,
				Session_Topic__c,
				Team_Season__c,
				Team_Season__r.Name,
				Team_Season__r.Team__r.Name,
				Team_Season__r.Season__r.Name,
				Team_Season__r.Team__r.School_Site__r.Region__c,
				Team_Season__r.Team__r.SCORES_Program_Type__c,
				Team_Season__r.Team__r.Uses_Headcount__c,
				Session_Weekday__c 
			FROM 
				Session__c 
			WHERE 
			(
				Team_Season__r.Coach_Writing__c = ':coachid' 
				OR Team_Season__r.Coach_Soccer__c = ':coachid' 
				OR Team_Season__r.SCORES_Program_Coordinator__c = ':coachid' 
				OR Team_Season__r.SCORES_Program_Manager__c = ':coachid'
			) 
			AND 
			(
			Session_Date__c = :startDate
			) 
			AND 
			(
			Team_Season__r.Team__r.School_Site__r.Region__c IN (:region)
			) 
			AND 
			(
			Team_Season__r.Id != null AND (Team_Season__r.Id = ':teamseasonId')
			) 
			LIMIT :limit
					OFFSET :offset]]></salesforce:salesforce-query>
			<salesforce:parameters><![CDATA[#[output application/java
---
{
	date : vars.date,
	teamseasonId : attributes.queryParams.teamseasonId,
	offset : attributes.queryParams.offset,
	limit : attributes.queryParams.limit,
	region : vars.regions,
	coachId : vars.coachId
}]]]></salesforce:parameters>
		</salesforce:query>
					</when>
					<otherwise >
						<salesforce:query doc:name="Query" doc:id="62494fde-0d93-47a1-9edd-343ec93ee0d1" config-ref="Salesforce_Config" >
							<salesforce:salesforce-query ><![CDATA[			SELECT 
				Id,
				IsDeleted,
				Name,
				Number_of_Students_Absent__c,
				Number_of_Students_Present__c,
				Percent_of_Students_Present__c,
				Session_Date__c,
				Session_Start__c,
				Session_End__c,
				Session_Topic__c,
				Team_Season__c,
				Team_Season__r.Name,
				Team_Season__r.Team__r.Name,
				Team_Season__r.Season__r.Name,
				Team_Season__r.Team__r.School_Site__r.Region__c,
				Team_Season__r.Team__r.SCORES_Program_Type__c,
				Team_Season__r.Team__r.Uses_Headcount__c,
				Session_Weekday__c 
			FROM 
				Session__c 
			WHERE 
			(
				Team_Season__r.Coach_Writing__c = ':coachid' 
				OR Team_Season__r.Coach_Soccer__c = ':coachid' 
				OR Team_Season__r.SCORES_Program_Coordinator__c = ':coachid' 
				OR Team_Season__r.SCORES_Program_Manager__c = ':coachid'
			) 
			AND 
			(
			Session_Date__c = :startDate
			) 
			AND 
			(
			Team_Season__r.Team__r.School_Site__r.Region__c IN (:region)
			) 
			LIMIT :limit
					OFFSET :offset]]></salesforce:salesforce-query>
							<salesforce:parameters ><![CDATA[#[output application/java
---
{
	date : vars.date,
	offset : attributes.queryParams.offset,
	limit : attributes.queryParams.limit,
	region : vars.regions,
	coachId : vars.coachId
}]]]></salesforce:parameters>
						</salesforce:query>
					</otherwise>
				</choice>
			</otherwise>
		</choice>
		<ee:transform
			doc:name="Create Response"
			doc:id="e829cd3e-8fa5-45c3-a9bc-79ffebb63c7c"
			xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	TeamSeasonId: payload01.Team_Season__c default "",
	SessionId: payload01.Id default "",
	SessionName: payload01.Name default "",
	SessionDate: payload01.Session_Date__c as String default "",
	SessionStartTime: payload01.Session_Start__c as LocalTime as String default "",
	SessionEndTime: payload01.Session_End__c as LocalTime as String default "",
	Weekday: payload01.Session_Weekday__c default "",
	SessionTopic: payload01.Session_Topic__c default "",
	IsDeleted: payload01.IsDeleted,
	SessionName: payload01.Name default "",
	StudentsAbsent: payload01.Number_of_Students_Absent__c,
	StudentsPresent: payload01.Number_of_Students_Present__c,
	AttendancePercentage: payload01.Percent_of_Students_Present__c,
	TeamSeasonName: payload01.Team_Season__r.Name default "",
	TeamName: payload01.Team_Season__r.Team__r.Name default "",
	SeasonName: payload01.Team_Season__r.Season__r.Name default "",
	Region: payload01.Team_Season__r.Team__r.School_Site__r.Region__c default "",
	ProgramType: payload01.Team_Season__r.Team__r.SCORES_Program_Type__c,
	UsesHeadcount: payload01.Team_Season__r.Team__r.Uses_Headcount__c
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger
			level="INFO"
			doc:name="Log Created Response"
			doc:id="a819e002-c9f4-4453-a14e-9b294acac38e"
			message="#[payload]" />
	</flow>
	<flow
		name="get:\coach\(coachId)\regions:salesforce-data-api-config">
		<logger
			level="INFO"
			doc:name="Log entry-flow"
			doc:id="f247b5aa-2966-4b4b-8cd2-a63c048e0335"
			message="Method and Request Path stored as vars: method=#[vars.method], request path=#[vars.requestPath]. Also for this request we have queryParam: date=#[attributes.queryParams[0]]" />
		<ee:transform
			doc:name="Store URI parameters"
			doc:id="732ca3e0-9f8e-4608-86c0-e6fe6b8d4538">
			<ee:variables>
				<ee:set-variable variableName="coachId"><![CDATA[attributes.uriParams.'coachId']]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<logger
			level="INFO"
			doc:name="Log Stored URI Params"
			doc:id="ae7f4f43-3aab-4a4b-aa22-72bd049c1f04"
			message="URI Param - coachId: #[vars.coachId] - stored as var - Query Param - date: #[vars.date] - stored as var" />
		<salesforce:query
			doc:name="Query"
			doc:id="1c469572-0a13-4ec4-af11-1a180dad1f29"
			config-ref="Salesforce_Config">
			<salesforce:salesforce-query><![CDATA[
			SELECT 
				Team__r.School_Site__r.Region__c 
			FROM 
				Team_Season__c 
			WHERE 
			(
				Coach_Soccer__c = ':coachId' 
				OR Coach_Writing__c = ':coachId' 
				OR SCORES_Program_Coordinator__c = ':coachId' 
				OR SCORES_Program_Manager__c = ':coachId'
			)
			]]></salesforce:salesforce-query>
			<salesforce:parameters><![CDATA[#[output application/java
---
{
	coachId : vars.coachId
}]]]></salesforce:parameters>
		</salesforce:query>
		<ee:transform
			doc:name="Create Response"
			doc:id="c6f46063-e866-4726-b0ac-ea760e0e6113"
			xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	Region: payload01.Team__r.School_Site__r.Region__c,
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform
			doc:name="Eliminate duplicates"
			doc:id="47da582b-3623-4cde-acb9-4f74f7ec4d73">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload distinctBy (value) -> { "unique" : value }]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger
			level="INFO"
			doc:name="Log Created Response"
			doc:id="e19e1f49-7d3c-4cfd-ba87-4f1c8be690b5"
			message="#[payload]" />
	</flow>
	<flow
		name="patch:\coach\(coachId)\teamseasons\(teamSeasonId)\sessions\(sessionId)\attendances:application\json:salesforce-data-api-config">
		<logger
			level="INFO"
			doc:name="Log entry-flow"
			doc:id="70cadc02-23f3-4935-ac5a-253f60edd43f"
			message="Method and Request Path stored as vars: method=#[vars.method], request path=#[vars.requestPath]. queryparams=#[attributes.queryParams]" />
		<ee:transform
			doc:name="Store URI parameters"
			doc:id="cc642196-6c49-49cf-acb8-7fd15a7e0f5c">
			<ee:variables>
				<ee:set-variable variableName="teamSeasonId"><![CDATA[attributes.uriParams.'teamSeasonId']]></ee:set-variable>
				<ee:set-variable variableName="sessionId"><![CDATA[attributes.uriParams.'sessionId']]></ee:set-variable>
				<ee:set-variable variableName="coachId"><![CDATA[attributes.uriParams.'coachId']]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<salesforce:update
			type="Attendance__c"
			doc:name="Update"
			doc:id="4f4cb0a3-354a-4613-b2eb-8fc7789b795f"
			config-ref="Salesforce_Config">
			<salesforce:records><![CDATA[#[%dw 2.0
output application/java
---
payload map ( payload01 , indexOfPayload01 ) -> {
	Id: payload01.AttendanceId,
	Contact__c: payload01.StudentId,
	Attended__c: payload01.Attended,
}]]]></salesforce:records>
		</salesforce:update>
		<choice doc:name="Update successful?" doc:id="81cab58f-3b0f-4844-9155-b03821c88f6f">
			<when expression="#[payload.successful == false]">
				<set-variable value="#['SALESFORCE_ATTENDANCE_UPDATE:' ++ (payload.items[0].statusCode default 'UNKNOWN')]" doc:name="Set Custom Error Type" doc:id="de0127f1-9543-4247-98f0-4919cad5e132" variableName="errorCustomType" />
				<set-variable value='#[%dw 2.0&#10;output text/plain&#10;---&#10;(payload.items[0].message default "Error While Updating Attendances.") ++ &#10;(&#10;  payload.items map ((payload01, indexOfPayload01) -&gt; &#10;    " Message: " ++ write(payload01.payload default "", "application/json")&#10;  ) joinBy ""&#10;)]' doc:name="Set Custom Error Message" doc:id="8d77c108-0e3c-4930-9f49-9734837df79c" variableName="errorCustomMessage" />
				<raise-error doc:name="Raise error" doc:id="a938155b-3242-4787-a33d-46ab6e9cdfaa" type="CUSTOM:CUSTOM_ERROR" description="Something went wrong while updating an attendance record." />
			</when>
		</choice>
		<ee:transform doc:name="Create Response" doc:id="fb3860fc-e16f-4661-ac7a-6df2a8cb4053" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  message: "Session updated"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
		<logger level="INFO" doc:name="Log Created Response" doc:id="6277debb-2aa4-4703-97d1-66d20cd0d8e0" message="#[payload]" />
	</flow>
	<flow
		name="post:\coach\(coachId)\teamseasons\(teamSeasonId)\sessions\(sessionId)\assessments:application\json:salesforce-data-api-config">
		<ee:transform>
			<ee:variables>
				<ee:set-variable variableName="coachId">attributes.uriParams.'coachId'
				</ee:set-variable>
				<ee:set-variable variableName="teamSeasonId">attributes.uriParams.'teamSeasonId'
				</ee:set-variable>
				<ee:set-variable variableName="sessionId">attributes.uriParams.'sessionId'
				</ee:set-variable>
			</ee:variables>
		</ee:transform>
		<logger
			level="INFO"
			doc:name="Log entry-flow"
			doc:id="5d7afdd1-4758-4010-9632-15a6f1ad0139"
			message="Method and Request Path stored as vars: method=#[vars.method], request path=#[vars.requestPath]. queryparams=#[attributes.queryParams]" />
		<ee:transform
			doc:name="Create Request"
			doc:id="32dc2296-0c8d-427f-93d8-42fedff400e1">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
                    output application/java
                    ---
                    [{
                        Student__c: payload.StudentId,
                        Coach__c: vars.coachId,
                        Session__c: payload.sessionId,
                        AssessmentResponse__c: payload.AssessmentResponse,
                        AssessmentType__c: payload.AssessmentType,
                        Team_Season__c: vars.teamSeasonId,
                        Session__c: vars.sessionId,
                        ExternalId__c: payload.StudentId ++ '-' ++ vars.sessionId
                    }]]]>
				</ee:set-payload>
			</ee:message>
		</ee:transform>
		<salesforce:create
			type="Assessment__c"
			doc:name="Create"
			doc:id="b126f117-35b4-46a1-b69d-df1514f0915c"
			config-ref="Salesforce_Config" />
		<choice doc:name="Upsert successful?" doc:id="dfe49b47-2fee-468f-94de-a249c892f867">
			<when expression="#[payload.successful == false]">
				<set-variable value="#['SALESFORCE_ASSESSMENT_CREATE:' ++ (payload.items[0].statusCode default 'UNKNOWN')]" doc:name="Set Custom Error Type" doc:id="116d4fa4-38ec-4d54-aa7e-5a37736d91c3" variableName="errorCustomType" />
				<set-variable value="#[payload.items[0].message default 'Unknown Error']" doc:name="Set Custom Error Message" doc:id="69573011-d907-4da1-9113-f1eff05db828" variableName="errorCustomMessage" />
				<raise-error doc:name="Raise error" doc:id="2be38cb1-dd0f-47cc-be2f-6fa6cc505545" type="CUSTOM:CUSTOM_ERROR" description="Something went wrong while creating an assessment record." />
			</when>
		</choice>
		<ee:transform xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd" doc:name="Create Response" doc:id="aa2451bf-0b3f-4de0-9be9-fd354e65d674">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  AssessmentId: payload.items[0].id
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
		<logger
			level="INFO"
			doc:name="Log Created Response"
			doc:id="8362b61e-5f53-4e52-b853-0eb2188332e0"
			message="#[payload]" />
	</flow>
	<flow
		name="patch:\coach\(coachId)\teamseasons\(teamSeasonId)\sessions\(sessionId)\assessments:application\json:salesforce-data-api-config">
		<ee:transform>
			<ee:variables>
				<ee:set-variable variableName="coachId">attributes.uriParams.'coachId'
				</ee:set-variable>
				<ee:set-variable variableName="teamSeasonId">attributes.uriParams.'teamSeasonId'
				</ee:set-variable>
				<ee:set-variable variableName="sessionId">attributes.uriParams.'sessionId'
				</ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:transform
			xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  message: "(not implemented)"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="get:\coach\(teamSeasonId)\(coachId)\stats" doc:id="59de02c6-9de9-4b00-9b6c-f7af6438b90e" >
		<set-variable value="#[attributes.uriParams.'coachId']" doc:name='Save "coachId"' doc:id="66df3a39-36f9-4328-81d5-ed4a29902fb1" variableName="coachId" />
		<set-variable value="#[attributes.uriParams.'teamSeasonId']" doc:name='Save "teamSeasonId"' doc:id="477fb233-3b92-4da4-b1c3-8300ce9323ee" variableName="teamSeasonId" />
		<set-variable value='#[%dw 2.0&#10;import * from dw::core::Dates&#10;&#10;output application/json&#10;var first = atBeginningOfMonth(now()) as Date&#10;var last = (atBeginningOfMonth(now() + |P1M|) - |P1D|) as Date&#10;&#10;output application/json&#10;---&#10;{&#10;    "firstDay": first,&#10;    "lastDay": last&#10;}]' doc:name="Set Month Dates" doc:id="59c93df1-71bb-4dc5-8f4a-1622673783c8" variableName="currentMonth"/>
		<salesforce:query doc:name="Query to retrieve total number of sessions this month" doc:id="df72a5a4-d117-4e5d-94ca-33372e77bbec" config-ref="Salesforce_Config" target="totalSessionsThisMonth">
			<salesforce:salesforce-query ><![CDATA[SELECT 
Id, Team_Season__r.Coach_Soccer__c, Team_Season__r.Coach_Writing__c, Session_Date__c, Session_End__c
FROM Session__c
WHERE (Team_Season__r.Coach_Writing__c = ':coachId' OR Team_Season__r.Coach_Soccer__c = ':coachId')
AND (Session_Date__c >= :firstDay AND Session_Date__c <= :lastDay)]]></salesforce:salesforce-query>
			<salesforce:parameters ><![CDATA[#[output application/java
				---
{
	coachId: vars.coachId,
	firstDay: vars.currentMonth.firstDay,
	lastDay: vars.currentMonth.firstDay
}]]]></salesforce:parameters>
		</salesforce:query>
		<set-variable value='#[%dw 2.0&#10;output application/json&#10;---&#10;vars.totalSessionsThisMonth map (item, i) -&gt; &#10;item ++ {&#10;        "Session_DateTime": &#10;        (item.Session_Date__c ++ "T" ++ item.Session_End__c) &#10;        as DateTime&#10;  }]' doc:name='Set Variable "totalSessionsThisMonth" with a combined DateTime field' doc:id="d7f2b182-afb9-4a4e-8dfa-70e2fa4b5b3e" variableName="totalSessionsThisMonth"/>
		<salesforce:query doc:name="Query to retrieve total tasks for this teamseason" doc:id="e4d8d4ab-b728-442e-a74e-2e32995f7598" config-ref="Salesforce_Config" target="totalTasksThisTeamSeason">
			<salesforce:salesforce-query><![CDATA[SELECT 
Id, Assigned_To__c, Session__c, Session__r.Team_Season__c, Task_Status__c
FROM SCORES_Task__c 
WHERE Assigned_To__c = ':coachId'
AND Session__r.Team_Season__c = ':teamSeasonId']]></salesforce:salesforce-query>
			<salesforce:parameters><![CDATA[#[output application/java
				---
{
	coachId: vars.coachId,
	teamSeasonId: vars.teamSeasonId
}]]]></salesforce:parameters>
		</salesforce:query>
		<salesforce:query doc:name="Query to retrieve attendance records for particular coach and teamseason" doc:id="9eba5095-dd10-4ee1-a117-d1e0cee3e90f" config-ref="Salesforce_Config" target="totalAttendancesThisTeamseason">
			<salesforce:salesforce-query><![CDATA[SELECT Attended__c,Id,Session__c, Session__r.Team_Season__c, Session__r.Team_Season__r.Coach_Soccer__c, Session__r.Team_Season__r.Coach_Writing__c 
FROM Attendance__c
WHERE Session__r.Team_Season__c = ':teamSeasonId'
AND 
(Session__r.Team_Season__r.Coach_Writing__c = ':coachId' OR Session__r.Team_Season__r.Coach_Soccer__c = ':coachId')]]></salesforce:salesforce-query>
			<salesforce:parameters><![CDATA[#[output application/java
				---
{
	coachId: vars.coachId,
	teamSeasonId: vars.teamSeasonId
}]]]></salesforce:parameters>
		</salesforce:query>
		<ee:transform doc:name="Prepare Response" doc:id="2a9bf057-e618-4767-8d9f-ac63a99127fc">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
var rightNow = (now() >> "America/Los_Angeles") as LocalDateTime

var true_attendances = sizeOf(vars.totalAttendancesThisTeamseason filter (item, i) -> item.Attended__c == "true") default 0
var total_attendances = sizeOf(vars.totalAttendancesThisTeamseason) default 0
var attendances_ratio = 
    if (total_attendances != 0) 
        ((true_attendances as Number / total_attendances) * 100)
        as String {format: "##0.00", roundMode: "HALF_UP"} ++ "%" 
    else "100%"
    
output application/json
---
{
	"sessions": {
		"current_month":{ 
			"completed": sizeOf(vars.totalSessionsThisMonth filter (item, i) -> (item.Session_DateTime) <= rightNow) default 0,
			"total": sizeOf(vars.totalSessionsThisMonth) default 0
		}
	},
	"tasks": {
		"current_teamseason": {
			"done": sizeOf(vars.totalTasksThisTeamSeason filter (item, i) -> item.Task_Status__c == "Done"),
			"total": sizeOf(vars.totalTasksThisTeamSeason) default 0
		}
	},
	"attendances":{
		"current_teamseason_ratio": attendances_ratio
	}
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<!-- [STUDIO:"Query to gather stats based on &quot;coachId&quot;"]<salesforce:query doc:name='Query to gather stats based on "coachId"' doc:id="4495ba6e-b4ac-4345-a66e-f1d783fe6db1" config-ref="Salesforce_Config" target="availableStats" >
			<salesforce:salesforce-query ><![CDATA[SELECT Task_Status__c, COUNT(Id)
FROM SCORES_Task__c
WHERE Assigned_To__c = ':coachId'
GROUP BY Task_Status__c&#93;&#93;></salesforce:salesforce-query>
			<salesforce:parameters ><![CDATA[#[output application/java
				&#45;&#45;-
{
	coachId: vars.coachId,
}&#93;&#93;&#93;></salesforce:parameters>
		</salesforce:query> [STUDIO] -->
		<!-- [STUDIO:"Get SCORES_Task__c properties (Describe sobject)"]<salesforce:describe-sobject type="SCORES_Task__c" doc:name="Get SCORES_Task__c properties (Describe sobject)" doc:id="aa3fb261-8e5f-4771-8d40-10573952c376" config-ref="Salesforce_Config" /> [STUDIO] -->
		<!-- [STUDIO:"Filter &quot;Task_Status__c&quot; values"]<ee:transform doc:name='Filter "Task_Status__c" values' doc:id="adfe6d6d-fe2e-4bb6-9a66-67008c63ba80" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
&#45;&#45;-
(
    payload.fields 
        filter (field) -> field.name == "Task_Status__c"
)[0&#93;.picklistValues 
    map (item) -> item.value&#93;&#93;></ee:set-payload>
			</ee:message>
		</ee:transform> [STUDIO] -->
		<!-- [STUDIO:"Prepare Stats"]<ee:transform doc:name="Prepare Stats" doc:id="edf8e8cd-aa0d-4693-9799-b8a43616dafd" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var memo = vars.availableStats reduce (item, acc = {}) -> 
  acc ++ {(item.Task_Status__c): item.expr0}
var result = payload map ((item, index) -> {(item): memo[item&#93; default 0})
&#45;&#45;-
result reduce ((item, acc = {}) -> acc ++ item)&#93;&#93;></ee:set-payload>
			</ee:message>
		</ee:transform> [STUDIO] -->
	</flow>
</mule>